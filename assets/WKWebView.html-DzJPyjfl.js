import{_ as s,c as a,f as e,o as t}from"./app-Cs1JbKij.js";const p={};function i(o,n){return t(),a("div",null,n[0]||(n[0]=[e(`<blockquote><p>记录一下 iOS8 之后的新控件 WKWebView，用以替代之前的 UIWebView，因为需求是在 TableView 的 Cell 中放一个 WebView。就产生了滑动手势冲突，为了解决这个问题就需要让 webView 高度自适应</p></blockquote><h2 id="一、新特性" tabindex="-1"><a class="header-anchor" href="#一、新特性"><span>一、新特性</span></a></h2><ul><li>在性能、稳定性、功能方面有很大的提升，最明显的就是内存占用降低了很多。</li><li>允许 JavaScript 的 Nitro 库加载并使用（UIWebView 中限制）</li><li>支持了更多的 HTML5 特性；</li><li>高达 60fps 的滚动刷新率以及内置手势（支持右滑返回）；</li><li>将 UIWebViewDelegate 与 UIWebView 重构成了 14 类与 3 个协议（<a href="https://developer.apple.com/reference/webkit" target="_blank" rel="noopener noreferrer">查看苹果官方文档</a>）；</li></ul><h2 id="二、初始化" tabindex="-1"><a class="header-anchor" href="#二、初始化"><span>二、初始化</span></a></h2><ul><li>首先需要引入 WebKit 库</li></ul><div class="language-objc line-numbers-mode" data-highlighter="prismjs" data-ext="objc" data-title="objc"><pre><code><span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">import</span> <span class="token expression"><span class="token operator">&lt;</span>WebKit<span class="token operator">/</span>WebKit<span class="token punctuation">.</span>h<span class="token operator">&gt;</span></span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>采用 configuration 的方式初始化（可选）</li></ul><div class="language-objc line-numbers-mode" data-highlighter="prismjs" data-ext="objc" data-title="objc"><pre><code><span class="line"><span class="token operator">-</span> <span class="token punctuation">(</span>WKWebView <span class="token operator">*</span><span class="token punctuation">)</span>webView <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>_webView<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        WKWebViewConfiguration <span class="token operator">*</span>config <span class="token operator">=</span> <span class="token punctuation">[</span>WKWebViewConfiguration new<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//初始化偏好设置属性：preferences</span></span>
<span class="line">        config<span class="token punctuation">.</span>preferences <span class="token operator">=</span> <span class="token punctuation">[</span>WKPreferences new<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//The minimum font size in points default is 0;</span></span>
<span class="line">        config<span class="token punctuation">.</span>preferences<span class="token punctuation">.</span>minimumFontSize <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//是否支持JavaScript</span></span>
<span class="line">        config<span class="token punctuation">.</span>preferences<span class="token punctuation">.</span>javaScriptEnabled <span class="token operator">=</span> YES<span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//不通过用户交互，是否可以打开窗口</span></span>
<span class="line">        config<span class="token punctuation">.</span>preferences<span class="token punctuation">.</span>javaScriptCanOpenWindowsAutomatically <span class="token operator">=</span> NO<span class="token punctuation">;</span></span>
<span class="line">        _webView <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>WKWebView alloc<span class="token punctuation">]</span>initWithFrame<span class="token punctuation">:</span><span class="token function">CGRectMake</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">self</span><span class="token punctuation">.</span>view<span class="token punctuation">.</span>width<span class="token punctuation">,</span> <span class="token keyword">self</span><span class="token punctuation">.</span>view<span class="token punctuation">.</span>height<span class="token punctuation">)</span> configuration<span class="token punctuation">:</span>config<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">        _webView<span class="token punctuation">.</span>UIDelegate <span class="token operator">=</span><span class="token keyword">self</span><span class="token punctuation">;</span></span>
<span class="line">        _webView<span class="token punctuation">.</span>navigationDelegate <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">// 此处因为高度自适应所以不应该让webview内部可以滚动</span></span>
<span class="line">        _webView<span class="token punctuation">.</span>scrollView<span class="token punctuation">.</span>scrollEnabled <span class="token operator">=</span> NO<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">return</span> _webView<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>加载网页</li></ul><div class="language-objc line-numbers-mode" data-highlighter="prismjs" data-ext="objc" data-title="objc"><pre><code><span class="line">WKWebView <span class="token operator">*</span>webView <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>WKWebView alloc<span class="token punctuation">]</span> initWithFrame<span class="token punctuation">:</span><span class="token keyword">self</span><span class="token punctuation">.</span>view<span class="token punctuation">.</span>bounds<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">[</span>webView loadRequest<span class="token punctuation">:</span><span class="token punctuation">[</span>NSURLRequest requestWithURL<span class="token punctuation">:</span><span class="token punctuation">[</span>NSURL URLWithString<span class="token punctuation">:</span><span class="token string">@&quot;http://m.baidu.com&quot;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">[</span><span class="token keyword">self</span><span class="token punctuation">.</span>view addSubview<span class="token punctuation">:</span>webView<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三、wkwebview-代理方法" tabindex="-1"><a class="header-anchor" href="#三、wkwebview-代理方法"><span>三、WKWebView 代理方法</span></a></h2><p>1.WKNavigationDelegate</p><p>该代理提供的方法，可以用来追踪加载过程（页面开始加载、加载完成、加载失败）、决定是否执行跳转。</p><div class="language-objc line-numbers-mode" data-highlighter="prismjs" data-ext="objc" data-title="objc"><pre><code><span class="line"><span class="token comment">// 页面开始加载时调用</span></span>
<span class="line"><span class="token operator">-</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>webView<span class="token punctuation">:</span><span class="token punctuation">(</span>WKWebView <span class="token operator">*</span><span class="token punctuation">)</span>webView didStartProvisionalNavigation<span class="token punctuation">:</span><span class="token punctuation">(</span>WKNavigation <span class="token operator">*</span><span class="token punctuation">)</span>navigation<span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 当内容开始返回时调用</span></span>
<span class="line"><span class="token operator">-</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>webView<span class="token punctuation">:</span><span class="token punctuation">(</span>WKWebView <span class="token operator">*</span><span class="token punctuation">)</span>webView didCommitNavigation<span class="token punctuation">:</span><span class="token punctuation">(</span>WKNavigation <span class="token operator">*</span><span class="token punctuation">)</span>navigation<span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 页面加载完成之后调用</span></span>
<span class="line"><span class="token operator">-</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>webView<span class="token punctuation">:</span><span class="token punctuation">(</span>WKWebView <span class="token operator">*</span><span class="token punctuation">)</span>webView didFinishNavigation<span class="token punctuation">:</span><span class="token punctuation">(</span>WKNavigation <span class="token operator">*</span><span class="token punctuation">)</span>navigation<span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 页面加载失败时调用</span></span>
<span class="line"><span class="token operator">-</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>webView<span class="token punctuation">:</span><span class="token punctuation">(</span>WKWebView <span class="token operator">*</span><span class="token punctuation">)</span>webView didFailProvisionalNavigation<span class="token punctuation">:</span><span class="token punctuation">(</span>WKNavigation <span class="token operator">*</span><span class="token punctuation">)</span>navigation<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>页面跳转的代理方法有三种，分为（收到跳转与决定是否跳转两种）</p><div class="language-objc line-numbers-mode" data-highlighter="prismjs" data-ext="objc" data-title="objc"><pre><code><span class="line"><span class="token comment">// 接收到服务器跳转请求之后调用</span></span>
<span class="line"><span class="token operator">-</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>webView<span class="token punctuation">:</span><span class="token punctuation">(</span>WKWebView <span class="token operator">*</span><span class="token punctuation">)</span>webView didReceiveServerRedirectForProvisionalNavigation<span class="token punctuation">:</span><span class="token punctuation">(</span>WKNavigation <span class="token operator">*</span><span class="token punctuation">)</span>navigation<span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 在收到响应后，决定是否跳转</span></span>
<span class="line"><span class="token operator">-</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>webView<span class="token punctuation">:</span><span class="token punctuation">(</span>WKWebView <span class="token operator">*</span><span class="token punctuation">)</span>webView decidePolicyForNavigationResponse<span class="token punctuation">:</span><span class="token punctuation">(</span>WKNavigationResponse <span class="token operator">*</span><span class="token punctuation">)</span>navigationResponse decisionHandler<span class="token punctuation">:</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token punctuation">(</span><span class="token operator">^</span><span class="token punctuation">)</span><span class="token punctuation">(</span>WKNavigationResponsePolicy<span class="token punctuation">)</span><span class="token punctuation">)</span>decisionHandler<span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 在发送请求之前，决定是否跳转</span></span>
<span class="line"><span class="token operator">-</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>webView<span class="token punctuation">:</span><span class="token punctuation">(</span>WKWebView <span class="token operator">*</span><span class="token punctuation">)</span>webView decidePolicyForNavigationAction<span class="token punctuation">:</span><span class="token punctuation">(</span>WKNavigationAction <span class="token operator">*</span><span class="token punctuation">)</span>navigationAction decisionHandler<span class="token punctuation">:</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token punctuation">(</span><span class="token operator">^</span><span class="token punctuation">)</span><span class="token punctuation">(</span>WKNavigationActionPolicy<span class="token punctuation">)</span><span class="token punctuation">)</span>decisionHandler<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2.WKUIDelegate</p><div class="language-objc line-numbers-mode" data-highlighter="prismjs" data-ext="objc" data-title="objc"><pre><code><span class="line"><span class="token comment">// 创建一个新的WebView</span></span>
<span class="line"><span class="token operator">-</span> <span class="token punctuation">(</span>WKWebView <span class="token operator">*</span><span class="token punctuation">)</span>webView<span class="token punctuation">:</span><span class="token punctuation">(</span>WKWebView <span class="token operator">*</span><span class="token punctuation">)</span>webView createWebViewWithConfiguration<span class="token punctuation">:</span><span class="token punctuation">(</span>WKWebViewConfiguration <span class="token operator">*</span><span class="token punctuation">)</span>configuration forNavigationAction<span class="token punctuation">:</span><span class="token punctuation">(</span>WKNavigationAction <span class="token operator">*</span><span class="token punctuation">)</span>navigationAction windowFeatures<span class="token punctuation">:</span><span class="token punctuation">(</span>WKWindowFeatures <span class="token operator">*</span><span class="token punctuation">)</span>windowFeatures<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>剩下三个代理方法全都是与界面弹出提示框相关的，针对于 web 界面的三种提示框（警告框、确认框、输入框）分别对应三种代理方法。下面只举了警告框的例子</p><div class="language-objc line-numbers-mode" data-highlighter="prismjs" data-ext="objc" data-title="objc"><pre><code><span class="line"><span class="token comment">/**</span>
<span class="line"> *  web界面中有弹出警告框时调用</span>
<span class="line"> *</span>
<span class="line"> *  @param webView           实现该代理的webview</span>
<span class="line"> *  @param message           警告框中的内容</span>
<span class="line"> *  @param frame             主窗口</span>
<span class="line"> *  @param completionHandler 警告框消失调用</span>
<span class="line"> */</span></span>
<span class="line"><span class="token operator">-</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>webView<span class="token punctuation">:</span><span class="token punctuation">(</span>WKWebView <span class="token operator">*</span><span class="token punctuation">)</span>webView runJavaScriptAlertPanelWithMessage<span class="token punctuation">:</span><span class="token punctuation">(</span>NSString <span class="token operator">*</span><span class="token punctuation">)</span>message initiatedByFrame<span class="token punctuation">:</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token punctuation">(</span><span class="token operator">^</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>completionHandler<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3.WKScriptMessageHandler</p><p>这个协议中包含一个必须实现的方法，这个方法是提高 App 与 web 端交互的关键，它可以直接将接收到的 JS 脚本转为 OC 或 Swift 对象</p><div class="language-objc line-numbers-mode" data-highlighter="prismjs" data-ext="objc" data-title="objc"><pre><code><span class="line"><span class="token comment">// 从web界面中接收到一个脚本时调用</span></span>
<span class="line"><span class="token operator">-</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>userContentController<span class="token punctuation">:</span><span class="token punctuation">(</span>WKUserContentController <span class="token operator">*</span><span class="token punctuation">)</span>userContentController didReceiveScriptMessage<span class="token punctuation">:</span><span class="token punctuation">(</span>WKScriptMessage <span class="token operator">*</span><span class="token punctuation">)</span>message<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="四、wkwebview-加载-js" tabindex="-1"><a class="header-anchor" href="#四、wkwebview-加载-js"><span>四、WKWebView 加载 JS</span></a></h2><div class="language-objc line-numbers-mode" data-highlighter="prismjs" data-ext="objc" data-title="objc"><pre><code><span class="line"><span class="token comment">// js代码</span></span>
<span class="line">NSString <span class="token operator">*</span>js <span class="token operator">=</span> <span class="token string">@&quot;	var count = document.images.length;for (var i = 0; i &lt; count; i++) {var image = document.images[i];image.style.width=320;};window.alert(&#39;找到&#39; + count + &#39;张图&#39;);&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 根据JS字符串初始化WKUserScript对象</span></span>
<span class="line">WKUserScript <span class="token operator">*</span>script <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>WKUserScript alloc<span class="token punctuation">]</span> initWithSource<span class="token punctuation">:</span>js injectionTime<span class="token punctuation">:</span>WKUserScriptInjectionTimeAtDocumentEnd forMainFrameOnly<span class="token punctuation">:</span>YES<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 根据生成的WKUserScript对象，初始化WKWebViewConfiguration</span></span>
<span class="line">WKWebViewConfiguration <span class="token operator">*</span>config <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>WKWebViewConfiguration alloc<span class="token punctuation">]</span> init<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token punctuation">[</span>config<span class="token punctuation">.</span>userContentController addUserScript<span class="token punctuation">:</span>script<span class="token punctuation">]</span><span class="token punctuation">;</span> _webView <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>WKWebView alloc<span class="token punctuation">]</span> initWithFrame<span class="token punctuation">:</span><span class="token keyword">self</span><span class="token punctuation">.</span>view<span class="token punctuation">.</span>bounds configuration<span class="token punctuation">:</span>config<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 加载html字符串</span></span>
<span class="line"><span class="token punctuation">[</span>_webView loadHTMLString<span class="token punctuation">:</span><span class="token string">@&quot;&lt;head&gt;&lt;/head&gt;&lt;img src=&#39;http://www.nsu.edu.cn/v/2014v3/img/background/3.jpg&#39; /&gt;&quot;</span>baseURL<span class="token punctuation">:</span>nil<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">[</span><span class="token keyword">self</span><span class="token punctuation">.</span>view addSubview<span class="token punctuation">:</span>_webView<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="五、作为-cell-自适应行高" tabindex="-1"><a class="header-anchor" href="#五、作为-cell-自适应行高"><span>五、作为 cell 自适应行高</span></a></h2><figure><img src="https://storage2.cuntuku.com/2017/05/27/2.gif" alt="2.gif" tabindex="0" loading="lazy"><figcaption>2.gif</figcaption></figure><ul><li>在 didFinishNavigation 方法中获取行高，然后刷新表格，网上资料所说的获取 webview.scrollview.contentsize.height 本人测试不可行，此处采用调用 js 通过 ajax 获取高度</li></ul><div class="language-objc line-numbers-mode" data-highlighter="prismjs" data-ext="objc" data-title="objc"><pre><code><span class="line"><span class="token comment">// 页面加载完成之后调用 此方法会调用多次</span></span>
<span class="line"><span class="token operator">-</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>webView<span class="token punctuation">:</span><span class="token punctuation">(</span>WKWebView <span class="token operator">*</span><span class="token punctuation">)</span>webView didFinishNavigation<span class="token punctuation">:</span><span class="token punctuation">(</span>null_unspecified WKNavigation <span class="token operator">*</span><span class="token punctuation">)</span>navigation <span class="token punctuation">{</span></span>
<span class="line">    __block CGFloat webViewHeight<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">self</span><span class="token punctuation">.</span>height <span class="token operator">=</span> webView<span class="token punctuation">.</span>frame<span class="token punctuation">.</span>size<span class="token punctuation">.</span>height<span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">//获取内容实际高度（像素）@&quot;document.getElementById(\\&quot;content\\&quot;).offsetHeight;&quot;</span></span>
<span class="line">    <span class="token punctuation">[</span>webView evaluateJavaScript<span class="token punctuation">:</span><span class="token string">@&quot;document.body.scrollHeight&quot;</span> completionHandler<span class="token punctuation">:</span><span class="token operator">^</span><span class="token punctuation">(</span>id _Nullable result<span class="token punctuation">,</span>NSError <span class="token operator">*</span> _Nullable error<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 此处js字符串采用scrollHeight而不是offsetHeight是因为后者并获取不到高度，看参考资料说是对于加载html字符串的情况下使用后者可以，但如果是和我一样直接加载原站内容使用前者更合适</span></span>
<span class="line">        <span class="token comment">//获取页面高度，并重置webview的frame</span></span>
<span class="line">        webViewHeight <span class="token operator">=</span> <span class="token punctuation">[</span>result doubleValue<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token function">NSLog</span><span class="token punctuation">(</span><span class="token string">@&quot;%f&quot;</span><span class="token punctuation">,</span>webViewHeight<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token function">dispatch_async</span><span class="token punctuation">(</span><span class="token function">dispatch_get_main_queue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">^</span><span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span>webViewHeight <span class="token operator">!=</span> <span class="token keyword">self</span><span class="token punctuation">.</span>height<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                webView<span class="token punctuation">.</span>frame <span class="token operator">=</span> <span class="token function">CGRectMake</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">self</span><span class="token punctuation">.</span>view<span class="token punctuation">.</span>frame<span class="token punctuation">.</span>size<span class="token punctuation">.</span>width<span class="token punctuation">,</span> webViewHeight<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token punctuation">[</span><span class="token keyword">self</span><span class="token punctuation">.</span>tableView reloadData<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">NSLog</span><span class="token punctuation">(</span><span class="token string">@&quot;结束加载&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>此处完成之后需要在 heightforrow 方法中设置 cell 的高为 webview 的高，但是会出现一个问题就是内容显示不全。还需要调用下面这个方法进行重布局</li></ul><div class="language-objc line-numbers-mode" data-highlighter="prismjs" data-ext="objc" data-title="objc"><pre><code><span class="line"><span class="token operator">-</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>scrollViewDidScroll<span class="token punctuation">:</span><span class="token punctuation">(</span>UIScrollView <span class="token operator">*</span><span class="token punctuation">)</span>scrollView <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">[</span>scrollView isKindOfClass<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token keyword">self</span><span class="token punctuation">.</span>tableView class<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">        <span class="token punctuation">[</span><span class="token keyword">self</span><span class="token punctuation">.</span>webView setNeedsLayout<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="六、小结" tabindex="-1"><a class="header-anchor" href="#六、小结"><span>六、小结</span></a></h2><blockquote><p>自适应行高是本文的重点，是我自己试验了多种方法之后确定可行的方法</p></blockquote><blockquote><p>下篇文章将介绍拦截 url 进行原生跳转</p></blockquote>`,34)]))}const l=s(p,[["render",i],["__file","WKWebView.html.vue"]]),u=JSON.parse('{"path":"/tutorial/iPhone/system/WKWebView.html","title":"WKWebView使用及自适应高度","lang":"zh-CN","frontmatter":{"title":"WKWebView使用及自适应高度","date":"2017-05-26T15:47:40.000Z","category":["iOS"],"tag":["iOS"],"description":"记录一下 iOS8 之后的新控件 WKWebView，用以替代之前的 UIWebView，因为需求是在 TableView 的 Cell 中放一个 WebView。就产生了滑动手势冲突，为了解决这个问题就需要让 webView 高度自适应 一、新特性 在性能、稳定性、功能方面有很大的提升，最明显的就是内存占用降低了很多。 允许 JavaScript 的...","head":[["meta",{"property":"og:url","content":"https://www.viptv.work/tutorial/iPhone/system/WKWebView.html"}],["meta",{"property":"og:site_name","content":"VIPTV - 工作室"}],["meta",{"property":"og:title","content":"WKWebView使用及自适应高度"}],["meta",{"property":"og:description","content":"记录一下 iOS8 之后的新控件 WKWebView，用以替代之前的 UIWebView，因为需求是在 TableView 的 Cell 中放一个 WebView。就产生了滑动手势冲突，为了解决这个问题就需要让 webView 高度自适应 一、新特性 在性能、稳定性、功能方面有很大的提升，最明显的就是内存占用降低了很多。 允许 JavaScript 的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://storage2.cuntuku.com/2017/05/27/2.gif"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-26T07:34:58.000Z"}],["meta",{"property":"article:tag","content":"iOS"}],["meta",{"property":"article:published_time","content":"2017-05-26T15:47:40.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-26T07:34:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"WKWebView使用及自适应高度\\",\\"image\\":[\\"https://storage2.cuntuku.com/2017/05/27/2.gif\\"],\\"datePublished\\":\\"2017-05-26T15:47:40.000Z\\",\\"dateModified\\":\\"2024-11-26T07:34:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hefung\\",\\"url\\":\\"/about/us\\"}]}"]]},"headers":[{"level":2,"title":"一、新特性","slug":"一、新特性","link":"#一、新特性","children":[]},{"level":2,"title":"二、初始化","slug":"二、初始化","link":"#二、初始化","children":[]},{"level":2,"title":"三、WKWebView 代理方法","slug":"三、wkwebview-代理方法","link":"#三、wkwebview-代理方法","children":[]},{"level":2,"title":"四、WKWebView 加载 JS","slug":"四、wkwebview-加载-js","link":"#四、wkwebview-加载-js","children":[]},{"level":2,"title":"五、作为 cell 自适应行高","slug":"五、作为-cell-自适应行高","link":"#五、作为-cell-自适应行高","children":[]},{"level":2,"title":"六、小结","slug":"六、小结","link":"#六、小结","children":[]}],"git":{"createdTime":1732606498000,"updatedTime":1732606498000,"contributors":[{"name":"github-actions[bot]","email":"28900094+github-actions[bot]@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":4.11,"words":1233},"filePathRelative":"tutorial/iPhone/system/WKWebView.md","localizedDate":"2017年5月26日","excerpt":"","autoDesc":true}');export{l as comp,u as data};

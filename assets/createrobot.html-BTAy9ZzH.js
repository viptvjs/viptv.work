import{_ as t,c as o,g as i,o as a}from"./app-BM09eWIW.js";const l={};function r(n,e){return a(),o("div",null,e[0]||(e[0]=[i('<h1 id="telegram-创建机器人" tabindex="-1"><a class="header-anchor" href="#telegram-创建机器人"><span>Telegram 创建机器人</span></a></h1><p>机器人是 Telegram 的特色功能之一。Telegram 提供开放的 api 接口，允许开发者制作自己的机器人。</p><h2 id="创建机器人" tabindex="-1"><a class="header-anchor" href="#创建机器人"><span>创建机器人</span></a></h2><ol><li>打开 Telegram</li><li>搜索 <a href="https://t.me/botfather" target="_blank" rel="noopener noreferrer">@BotFather</a></li><li>点击<code>START</code>（开始）</li><li>点击<code>Menu</code>（菜单）-&gt;点击<code>/newbot</code>（新机器人）<br> BotFather 回复：<code>Alright, a new bot. How are we going to call it? Please choose a name for your bot.</code></li><li>输入机器人名称（自定义）<br> BotFather 回复：<code>Good. Now let&#39;s choose a username for your bot. It must end in </code>bot<code>. Like this, for example: TetrisBot or tetris_bot.</code></li><li>输入机器人用户名（bot 为结尾，例：<code>abcbot</code>，用户名设置后不可更改）<br> BotFather 回复（得到以下回复说明创建成功）：<code>Done! Congratulations on your new bot. You will find it at t.me/abcbot....</code>（<code>完毕！ 恭喜您的新机器人。 您可以在 t.me/abcbot 找到它。</code>）</li></ol><details class="hint-container details"><summary>操作演示</summary><figure><img src="https://s2.loli.net/2024/01/28/PFo3Mq7CdxAsTby.jpg" alt="createrobot.jpg" tabindex="0" loading="lazy"><figcaption>createrobot.jpg</figcaption></figure></details><div class="hint-container caution"><p class="hint-container-title">警告</p><p>请勿泄露 API Token，所有知道 API Token 的人都可以控制你的机器人！</p></div><h2 id="管理机器人" tabindex="-1"><a class="header-anchor" href="#管理机器人"><span>管理机器人</span></a></h2><ol><li><p>点击<code>Menu</code>（菜单）-&gt; 点击 <code>/mybots</code>（我的机器人）</p></li><li><p>点击机器人用户名</p><ul><li><p>API Token（API 令牌，用于控制机器人）</p></li><li><p>Edit bot（编辑 bot）</p><ul><li>Edit Name（编辑名称）</li><li>Edit About（编辑关于，内容显示在机器人简介处）</li><li>Edit Description（编辑说明，用户会在启用机器人前“它能做什么”中看到）</li><li>Edit Description Pecture（编辑描述图片）</li><li>Edit Botpic（编辑机器人头像）</li><li>Edit Commands（编辑命令，可以在此处添加/修改命令，如<code>/help</code>等）</li></ul></li><li><p>Bot settings（bot 设置）</p><ul><li>lnline mode（内联模式，开启后在输入框@机器人可以使用内联功能）</li><li>Allow Groups?（允许将机器人拉入群组吗？）</li><li>Group Privacy（群组隐私，默认开启，机器人未收到命令不会读取群组消息内容）</li><li>Group Admin Rights（群组管理员权限，开启后拉入群组时需要授予管理员权限）</li><li>Channle Admin Rights（频道管理员权限，开启后拉入频道时需要授予管理员权限）</li><li>Payments（付款方式，您可以在此处添加付款方式）</li><li>Domain（域名，您可以在此处将域名绑定至机器人）</li><li>Menu Button（菜单按钮，显示在机器人输入框下方）</li><li>Back to bot（返回机器人）</li></ul></li><li><p>Payments（付款方式）</p></li><li><p>Transfer Ownership（转让所有权）<br> BotFather 回复：<code>You can transfer bot ownership to another Telegram user.</code>（<code>您可以将机器人所有权转让给其他Telegram用户。</code>）</p><ol><li><p>点击 Choose recipient（选择收件人）</p><p>BotFather 回复：<code>Please share the new owner&#39;s contact or their username.</code>（<code>请分享新所有者的联系方式或用户名。</code>）</p></li><li><p>发送收件人 ID（收件人必须先前给机器人发送过 1 条消息）</p><p>BotFather 回复：<code>You are about to transfer ownership of the bot @abcbot to </code>收件人名称.....（<code>您即将将机器人@abcbot 的所有权转让给 </code>某某人.....）</p></li><li><p>点击 <code>Yes，I am sure, Proceed.</code>（<code>是的，我确定，继续。</code>）<br> （如已设置需输入）</p></li></ol></li><li><p>Delete Bot（删除机器人，该操作无法撤销）</p></li><li><p>« Back to Bots List（返回机器人列表）</p></li></ul></li></ol><div class="hint-container tip"><p class="hint-container-title">提示</p><p>如果您想要搭建一个私聊机器人，接下来请阅读 <a href="/tgwiki/livegram">Telegram 搭建私聊机器人</a></p></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>在找 Telegram 机器人推荐？请参阅 <a href="/tgwiki/robot">此处</a> 。</p></div>',10)]))}const p=t(l,[["render",r],["__file","createrobot.html.vue"]]),s=JSON.parse('{"path":"/tutorial/telegram/createrobot.html","title":"创建机器人","lang":"zh-CN","frontmatter":{"title":"创建机器人","description":"机器人是Telegram的特色功能之一。Telegram提供开放的api接口，允许开发者制作自己的机器人。本文介绍了如何创建自己的机器人，以及管理机器人的各项功能说明。访问TGwiki - Telegram知识库，了解更多Telegram使用技巧。","icon":"robot","head":[["meta",{"name":"keywords","content":"Telegram创建机器人,Telegram机器人,Telegram管理机器人,Telegram编辑机器人,TG创建机器人,TG机器人,TG管理机器人,TG编辑机器人,电报创建机器人,电报机器人,电报管理机器人,电报编辑机器人,Telegram功能,TGwiki,Telegram知识库"}],["meta",{"property":"og:url","content":"https://www.viptv.work/tutorial/telegram/createrobot.html"}],["meta",{"property":"og:site_name","content":"VIPTV - 工作室"}],["meta",{"property":"og:title","content":"创建机器人"}],["meta",{"property":"og:description","content":"机器人是Telegram的特色功能之一。Telegram提供开放的api接口，允许开发者制作自己的机器人。本文介绍了如何创建自己的机器人，以及管理机器人的各项功能说明。访问TGwiki - Telegram知识库，了解更多Telegram使用技巧。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://s2.loli.net/2024/01/28/PFo3Mq7CdxAsTby.jpg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-16T16:28:47.000Z"}],["meta",{"property":"article:modified_time","content":"2025-01-16T16:28:47.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"创建机器人\\",\\"image\\":[\\"https://s2.loli.net/2024/01/28/PFo3Mq7CdxAsTby.jpg\\"],\\"dateModified\\":\\"2025-01-16T16:28:47.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hefung\\",\\"url\\":\\"/about/us\\"}]}"],["link",{"rel":"alternate","type":"application/atom+xml","href":"https://www.viptv.work/atom.xml","title":"VIPTV - 工作室 Atom Feed"}],["link",{"rel":"alternate","type":"application/json","href":"https://www.viptv.work/feed.json","title":"VIPTV - 工作室 JSON Feed"}],["link",{"rel":"alternate","type":"application/rss+xml","href":"https://www.viptv.work/rss.xml","title":"VIPTV - 工作室 RSS Feed"}]]},"headers":[{"level":2,"title":"创建机器人","slug":"创建机器人","link":"#创建机器人","children":[]},{"level":2,"title":"管理机器人","slug":"管理机器人","link":"#管理机器人","children":[]}],"git":{"createdTime":1737044927000,"updatedTime":1737044927000,"contributors":[{"name":"github-actions[bot]","username":"github-actions[bot]","email":"28900094+github-actions[bot]@users.noreply.github.com","commits":1,"url":"https://github.com/github-actions[bot]"}]},"readingTime":{"minutes":3.2,"words":959},"filePathRelative":"tutorial/telegram/createrobot.md","localizedDate":"2025年1月17日","excerpt":""}');export{p as comp,s as data};

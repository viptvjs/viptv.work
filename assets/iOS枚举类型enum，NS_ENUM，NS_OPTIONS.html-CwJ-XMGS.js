import{_ as s,c as a,f as e,o as p}from"./app-C99TAfmi.js";const t={};function o(c,n){return p(),a("div",null,n[0]||(n[0]=[e(`<blockquote><p>进入正题，今天介绍一下objective-c中的枚举</p></blockquote><h3 id="提要" tabindex="-1"><a class="header-anchor" href="#提要"><span>提要</span></a></h3><ul><li><p>首先要知道的是,枚举值 它是一个整形(int) 并且,它不参加内存的占用和释放 枚举定义变量即可直接使用,不用初始化</p></li><li><p>三种类型的枚举</p><ul><li><strong>enum</strong> 在iOS6之前一般我们采用C风格的enum关键字可以定义枚举类型</li></ul><p>在iOS6之后引入两个宏来定义枚举实际上是将enum定义和typedef合二为一，并且采用不同的宏来从代码角度来区分。</p><ul><li><p><strong>NS_ENUM</strong> 普通枚举定义可参见UIKit.Framework中</p></li><li><p><strong>NS_OPTIONS</strong> 位运算及特殊枚举的定义。什么时候要用到这种方式呢? 那就是一个枚举变量可能要代表多个枚举值的时候. 其实给一个枚举变量赋予多个枚举值的时候,原理只是把各个枚举值加起来罢了. 当加起来以后,就获取了一个新的值,那么为了保证这个值的唯一性,这个时候就体现了位运算的重要作用. 位运算可以确保枚举值组合的唯一性. 因为位运算的计算方式是将二进制转换成十进制,也就是说,枚举值里面存取的是 计算后的十进制值. 打个比方: 通过上面的位运算方式设定好枚举以后,打印出来的枚举值分别是: 1 2 4 8 16 这5个数字,无论你如何组合在一起,也不会产生两个同样的数字.</p></li></ul><p>这两个宏的定义在Foundation.framework的NSObjCRuntime.h中：</p></li></ul><div class="language-objc line-numbers-mode" data-highlighter="prismjs" data-ext="objc" data-title="objc"><pre><code><span class="line">  		<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression"><span class="token punctuation">(</span>__cplusplus <span class="token operator">&amp;&amp;</span> __cplusplus <span class="token operator">&gt;=</span> <span class="token number">201103L</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token function">__has_extension</span><span class="token punctuation">(</span>cxx_strong_enums<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">__has_feature</span><span class="token punctuation">(</span>objc_fixed_enum<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token operator">!</span>__cplusplus <span class="token operator">&amp;&amp;</span> <span class="token function">__has_feature</span><span class="token punctuation">(</span>objc_fixed_enum<span class="token punctuation">)</span><span class="token punctuation">)</span></span></span></span>
<span class="line">		<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">NS_ENUM</span><span class="token expression"><span class="token punctuation">(</span>_type<span class="token punctuation">,</span> _name<span class="token punctuation">)</span> <span class="token keyword">enum</span> _name <span class="token punctuation">:</span> _type _name<span class="token punctuation">;</span> <span class="token keyword">enum</span> _name <span class="token punctuation">:</span> _type</span></span></span>
<span class="line">		<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression"><span class="token punctuation">(</span>__cplusplu </span></span></span>
<span class="line">		<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">NS_OPTIONS</span><span class="token expression"><span class="token punctuation">(</span>_type<span class="token punctuation">,</span> _name<span class="token punctuation">)</span> _type _name<span class="token punctuation">;</span> <span class="token keyword">enum</span> <span class="token punctuation">:</span> _type  </span></span></span>
<span class="line">		<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">else</span>  </span></span>
<span class="line">		<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">NS_OPTIONS</span><span class="token expression"><span class="token punctuation">(</span>_type<span class="token punctuation">,</span> _name<span class="token punctuation">)</span> <span class="token keyword">enum</span> _name <span class="token punctuation">:</span> _type _name<span class="token punctuation">;</span> <span class="token keyword">enum</span> _name <span class="token punctuation">:</span> _type  </span></span></span>
<span class="line">		<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span>  </span></span>
<span class="line">		<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">else</span>  </span></span>
<span class="line">		<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">NS_ENUM</span><span class="token expression"><span class="token punctuation">(</span>_type<span class="token punctuation">,</span> _name<span class="token punctuation">)</span> _type _name<span class="token punctuation">;</span> <span class="token keyword">enum</span>  </span></span></span>
<span class="line">				<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">NS_OPTIONS</span><span class="token expression"><span class="token punctuation">(</span>_type<span class="token punctuation">,</span> _name<span class="token punctuation">)</span> _type _name<span class="token punctuation">;</span> <span class="token keyword">enum</span>  </span></span></span>
<span class="line">		<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span>  </span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="举个🌰" tabindex="-1"><a class="header-anchor" href="#举个🌰"><span>举个🌰</span></a></h3><div class="language-objc line-numbers-mode" data-highlighter="prismjs" data-ext="objc" data-title="objc"><pre><code><span class="line">    <span class="token comment">//推荐的定义枚举类型的方式</span></span>
<span class="line">    <span class="token keyword">typedef</span> <span class="token function">NS_ENUM</span><span class="token punctuation">(</span>NSInteger<span class="token punctuation">,</span> RWTLeftMenuTopItemType<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">     RWTLeftMenuTopItemMain<span class="token punctuation">,</span></span>
<span class="line">     RWTLeftMenuTopItemShows<span class="token punctuation">,</span></span>
<span class="line">     RWTLeftMenuTopItemSchedule</span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">typedef</span> <span class="token function">NS_ENUM</span><span class="token punctuation">(</span>NSInteger<span class="token punctuation">,</span> RWTGlobalConstants<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    RWTPinSizeMin <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">    RWTPinSizeMax <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">,</span></span>
<span class="line">    RWTPinCountMin <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">,</span></span>
<span class="line">    RWTPinCountMax <span class="token operator">=</span> <span class="token number">500</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">typedef</span> <span class="token function">NS_OPTIONS</span><span class="token punctuation">(</span>NSInteger<span class="token punctuation">,</span> Test<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    TestA <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">//1 1 1等于号后面必须等于1</span></span>
<span class="line"></span>
<span class="line">    TestB <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">//2 2 10 转换成 10进制 2</span></span>
<span class="line"></span>
<span class="line">    TestC <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">//4 3 100 转换成 10进制 4</span></span>
<span class="line"></span>
<span class="line">    TestD <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token comment">//8 4 1000 转换成 10进制 8</span></span>
<span class="line"></span>
<span class="line">    TestE <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">4</span> <span class="token comment">//16 5 10000 转换成 10进制 16</span></span>
<span class="line"></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">//不推荐的方式</span></span>
<span class="line">    <span class="token keyword">enum</span> GlobalConstants <span class="token punctuation">{</span></span>
<span class="line">    kMaxPinSize <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">,</span></span>
<span class="line">    kMaxPinCount <span class="token operator">=</span> <span class="token number">500</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>共同学习共同进步，加油。fighting😆</p></blockquote>`,7)]))}const i=s(t,[["render",o],["__file","iOS枚举类型enum，NS_ENUM，NS_OPTIONS.html.vue"]]),r=JSON.parse('{"path":"/tutorial/iPhone/system/iOS%E6%9E%9A%E4%B8%BE%E7%B1%BB%E5%9E%8Benum%EF%BC%8CNS_ENUM%EF%BC%8CNS_OPTIONS.html","title":"OC 中的枚举类型","lang":"zh-CN","frontmatter":{"title":"OC 中的枚举类型","date":"2017-01-06T11:19:16.000Z","category":["iOS"],"tag":["iOS","Objectiv-C语法"],"description":"进入正题，今天介绍一下objective-c中的枚举 提要 首先要知道的是,枚举值 它是一个整形(int) 并且,它不参加内存的占用和释放 枚举定义变量即可直接使用,不用初始化 三种类型的枚举 enum 在iOS6之前一般我们采用C风格的enum关键字可以定义枚举类型 在iOS6之后引入两个宏来定义枚举实际上是将enum定义和typedef合二为一，并...","head":[["meta",{"property":"og:url","content":"https://www.viptv.work/tutorial/iPhone/system/iOS%E6%9E%9A%E4%B8%BE%E7%B1%BB%E5%9E%8Benum%EF%BC%8CNS_ENUM%EF%BC%8CNS_OPTIONS.html"}],["meta",{"property":"og:site_name","content":"VIPTV - 工作室"}],["meta",{"property":"og:title","content":"OC 中的枚举类型"}],["meta",{"property":"og:description","content":"进入正题，今天介绍一下objective-c中的枚举 提要 首先要知道的是,枚举值 它是一个整形(int) 并且,它不参加内存的占用和释放 枚举定义变量即可直接使用,不用初始化 三种类型的枚举 enum 在iOS6之前一般我们采用C风格的enum关键字可以定义枚举类型 在iOS6之后引入两个宏来定义枚举实际上是将enum定义和typedef合二为一，并..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-26T13:06:28.000Z"}],["meta",{"property":"article:tag","content":"iOS"}],["meta",{"property":"article:tag","content":"Objectiv-C语法"}],["meta",{"property":"article:published_time","content":"2017-01-06T11:19:16.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-26T13:06:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"OC 中的枚举类型\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2017-01-06T11:19:16.000Z\\",\\"dateModified\\":\\"2024-11-26T13:06:28.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hefung\\",\\"url\\":\\"/about/us\\"}]}"]]},"headers":[{"level":3,"title":"提要","slug":"提要","link":"#提要","children":[]},{"level":3,"title":"举个🌰","slug":"举个🌰","link":"#举个🌰","children":[]}],"git":{"createdTime":1732626388000,"updatedTime":1732626388000,"contributors":[{"name":"github-actions[bot]","email":"28900094+github-actions[bot]@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":2.12,"words":636},"filePathRelative":"tutorial/iPhone/system/iOS枚举类型enum，NS_ENUM，NS_OPTIONS.md","localizedDate":"2017年1月6日","excerpt":"","autoDesc":true}');export{i as comp,r as data};

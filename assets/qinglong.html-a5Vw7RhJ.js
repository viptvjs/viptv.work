import{_ as h,c as p,g as l,a as i,f as n,h as e,e as t,d as k,o as r}from"./app-BBKGZYdt.js";const d={},o={class:"hint-container details"};function g(c,s){const a=k("RouteLink");return r(),p("div",null,[s[11]||(s[11]=l('<h1 id="青龙面板的安装及使用" tabindex="-1"><a class="header-anchor" href="#青龙面板的安装及使用"><span>青龙面板的安装及使用</span></a></h1><blockquote><p>更新时间：2021-11-24</p></blockquote><h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><p>一个支持 Python3、JavaScript、Shell、Typescript 的定时任务管理平台</p><p>仓库：<a href="https://github.com/whyour/qinglong" target="_blank" rel="noopener noreferrer">https://github.com/whyour/qinglong</a></p><p>镜像：<a href="https://hub.docker.com/r/whyour/qinglong" target="_blank" rel="noopener noreferrer">https://hub.docker.com/r/whyour/qinglong</a></p><p>tg群：<a href="https://t.me/jiao_long" target="_blank" rel="noopener noreferrer">https://t.me/jiao_long</a></p><figure><img src="https://img.viptv.work/viptv/qinglong/qinglong-01.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="准备条件" tabindex="-1"><a class="header-anchor" href="#准备条件"><span>准备条件</span></a></h2>',9)),i("ul",null,[i("li",null,[i("p",null,[n(a,{to:"/tutorial/website/Server/"},{default:e(()=>s[0]||(s[0]=[t("服务器")])),_:1})])]),i("li",null,[i("p",null,[n(a,{to:"/tutorial/website/shell/"},{default:e(()=>s[1]||(s[1]=[t("shell工具")])),_:1})])]),i("li",null,[i("p",null,[n(a,{to:"/tutorial/website/docker.html"},{default:e(()=>s[2]||(s[2]=[t("安装docker")])),_:1})])])]),s[12]||(s[12]=l(`<h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h2><h3 id="拉取镜像" tabindex="-1"><a class="header-anchor" href="#拉取镜像"><span>拉取镜像</span></a></h3><div class="language-sh" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pull</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> whyour/qinglong:latest</span></span></code></pre></div><figure><img src="https://img.viptv.work/viptv/qinglong/qinglong-02.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="创建容器" tabindex="-1"><a class="header-anchor" href="#创建容器"><span>创建容器</span></a></h3><p>冒号前的 <code>5700</code> 是映射端口建议改，冒号后的 5700 是监听端口，尽量不要动</p><div class="language-sh" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -dit</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -v</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $PWD</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/ql/data:/ql/data</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 冒号后面的 5700 为默认端口，如果设置了 QlPort, 需要跟 QlPort 保持一致</span></span>
<span class="line highlighted"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 5700:5700</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 部署路径非必须，比如 /test</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  -e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> QlBaseUrl=&quot;/&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 部署端口非必须，当使用 host 模式时，可以设置服务启动后的端口，默认 5700</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  -e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> QlPort=&quot;5700&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  --name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> qinglong</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  --hostname</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> qinglong</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  --restart</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> unless-stopped</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  whyour/qinglong:latest</span></span></code></pre></div><div class="hint-container tip"><p class="hint-container-title">说明</p><p>我这里端口改成了 <code>5600</code></p></div><figure><img src="https://img.viptv.work/viptv/qinglong/qinglong-03.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="重启防火墙" tabindex="-1"><a class="header-anchor" href="#重启防火墙"><span>重启防火墙</span></a></h3><div class="language-sh" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> start</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> firewalld</span></span></code></pre></div><figure><img src="https://img.viptv.work/viptv/qinglong/qinglong-04.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="放行端口" tabindex="-1"><a class="header-anchor" href="#放行端口"><span>放行端口</span></a></h3>`,13)),i("p",null,[s[4]||(s[4]=t("放行5700端口，另外 ")),n(a,{to:"/tutorial/website/Server/tencent.html#%E9%98%B2%E7%81%AB%E5%A2%99"},{default:e(()=>s[3]||(s[3]=[t("服务器里的端口(安全组/防火墙)")])),_:1}),s[5]||(s[5]=t(" 也要放行"))]),s[13]||(s[13]=l('<div class="hint-container tip"><p class="hint-container-title">说明</p><p>如果你映射端口改了，请放行更改后的映射端口</p></div><div class="language-sh" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">firewall-cmd</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --zone=public</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --add-port=5600/tcp</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --permanent</span></span></code></pre></div><div class="language-sh" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">firewall-cmd</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --zone=public</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --add-port=5700/tcp</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --permanent</span></span></code></pre></div><figure><img src="https://img.viptv.work/viptv/qinglong/qinglong-05.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="登录面板" tabindex="-1"><a class="header-anchor" href="#登录面板"><span>登录面板</span></a></h2><h3 id="访问" tabindex="-1"><a class="header-anchor" href="#访问"><span>访问</span></a></h3><p>青龙面板地址：<code>http://你的公网ip:端口</code></p>',7)),i("details",o,[s[9]||(s[9]=i("summary",null,"网页打不开？",-1)),s[10]||(s[10]=i("p",null,"请检查，是否开启对应的端口！",-1)),i("p",null,[s[7]||(s[7]=t("虚拟机请安装 ")),n(a,{to:"/tutorial/website/BT.html"},{default:e(()=>s[6]||(s[6]=[t("宝塔面板")])),_:1}),s[8]||(s[8]=t(" 后查看端口是否放行，再次访问即可"))])]),s[14]||(s[14]=l(`<figure><img src="https://img.viptv.work/viptv/qinglong/qinglong-06.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>开始安装-设置账户密码-提交</p><div class="hint-container tip"><p class="hint-container-title">说明</p><p>通知可以先跳过，之后再添加，完成即可</p></div><figure><img src="https://img.viptv.work/viptv/qinglong/qinglong-07.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>登录青龙，进入青龙前端</p><figure><img src="https://img.viptv.work/viptv/qinglong/qinglong-08.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://img.viptv.work/viptv/qinglong/qinglong-09.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="命令" tabindex="-1"><a class="header-anchor" href="#命令"><span>命令</span></a></h3><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 更新并重启青龙</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ql</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> update</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 查看日志</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> logs</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> qinglong</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                                                    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 运行自定义脚本extra.sh</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ql</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> extra</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                                                     </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 添加单个脚本文件</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ql</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> raw</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">file_ur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">l&gt;                                             </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 添加单个仓库的指定脚本</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ql</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> repo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">repo_ur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">l&gt; &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">whitelis</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">t&gt; &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">blacklis</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">t&gt; &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">dependenc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">e&gt; &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">branc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">h&gt; &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">extension</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">s&gt;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 删除旧日志</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ql</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rmlog</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">day</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">s&gt;                                              </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 启动tg-bot</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ql</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bot</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                                                       </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 检测青龙环境并修复</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ql</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> check</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                                                     </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 重置登录错误次数</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ql</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> resetlet</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                                                  </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 禁用两步登录</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ql</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> resettfa</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                                                  </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">---</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 依次执行，如果设置了随机延迟，将随机延迟一定秒数</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">task</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">file_pat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">h&gt;                                             </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 依次执行，无论是否设置了随机延迟，均立即运行，前台会输出日，同时记录在日志文件中</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">task</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">file_pat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">h&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">now</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                                         </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 并发执行，无论是否设置了随机延迟，均立即运行，前台不产生日，直接记录在日志文件中，且可指定账号执行</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">task</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">file_pat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">h&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">conc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">env_nam</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">e&gt; &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">account_numbe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">r</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&gt;(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">可选的</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 指定账号执行，无论是否设置了随机延迟，均立即运行 </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">task</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">file_pat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">h&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">desi</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">env_nam</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">e&gt; &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">account_numbe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">r&gt;      </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 设置任务超时时间   </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">task</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">max_tim</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">e&gt; &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">file_pat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">h&gt;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 使用 -- 分割，-- 后面的参数会传给脚本，下面的例子，脚本就可接收到参数 -u whyour -p password</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">task</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">file_pat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">h&gt; </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">--</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -u</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> whyour</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> password</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用</span></a></h2><h3 id="拉库" tabindex="-1"><a class="header-anchor" href="#拉库"><span>拉库</span></a></h3><p>右上角，添加任务</p><figure><img src="https://img.viptv.work/viptv/qinglong/qinglong-10.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>拉取库脚本文件，就用faker的京东脚本演示</p><p>faker3内部互助版</p><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>ql repo https://ghproxy.com/https://github.com/shufflewzc/faker3.git &quot;jd_|jx_|gua_|jddj_|jdCookie&quot; &quot;activity|backUp&quot; &quot;^jd[^_]|USER|function|utils|sendNotify|ZooFaker_Necklace.js|JDJRValidator_|sign_graphics_validate|ql|JDSignValidator|magic|depend|h5sts&quot; &quot;main&quot;</span></span></code></pre></div><div class="hint-container tip"><p class="hint-container-title">说明</p><p>这里添加后先禁用，了解 <a href="#%E5%85%B6%E4%BB%96%E6%8B%93%E5%B1%95">cron定时规则</a> 再来改</p></div><figure><img src="https://img.viptv.work/viptv/qinglong/qinglong-11.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>确定好之后，点确定，之后运行，等待一会再刷新</p><figure><img src="https://img.viptv.work/viptv/qinglong/qinglong-12.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>多等一会，以免有些脚本没有加载</p><figure><img src="https://img.viptv.work/viptv/qinglong/qinglong-13.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="安装依赖" tabindex="-1"><a class="header-anchor" href="#安装依赖"><span>安装依赖</span></a></h3><p>依赖管理 - <code>Nodejs</code> ，自动拆分 <code>是</code></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>png-js</span></span>
<span class="line"><span>@types/node  </span></span>
<span class="line"><span>require</span></span>
<span class="line"><span>typescript</span></span>
<span class="line"><span>crypto-js</span></span>
<span class="line"><span>prettytable</span></span>
<span class="line"><span>dotenv</span></span>
<span class="line"><span>jsdom</span></span>
<span class="line"><span>date-fns</span></span>
<span class="line"><span>tough-cookie</span></span>
<span class="line"><span>tslib</span></span>
<span class="line"><span>ws@7.4.3</span></span>
<span class="line"><span>ts-md5</span></span>
<span class="line"><span>jsdom -g</span></span>
<span class="line"><span>jieba</span></span>
<span class="line"><span>fs</span></span>
<span class="line"><span>form-data</span></span>
<span class="line"><span>json5</span></span>
<span class="line"><span>global-agent </span></span>
<span class="line"><span>png-js</span></span>
<span class="line"><span>@types/node  </span></span>
<span class="line"><span>require</span></span>
<span class="line"><span>typescript</span></span>
<span class="line"><span>js-base64</span></span>
<span class="line"><span>axios</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://img.viptv.work/viptv/qinglong/qinglong-14.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>依赖管理 - <code>Python3</code> 我是直接失败的，实在想装参考下面步骤</p><div class="hint-container tip"><p class="hint-container-title">说明</p><p><code>qinglong</code> 为容器名</p></div><div class="language-sh" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> exec</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -it</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> qinglong</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bash</span></span></code></pre></div><div class="language-sh" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -sS</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://bootstrap.pypa.io/get-pip.py</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">python3</span></span></code></pre></div><p>然后再执行下列依赖即可</p><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>requests</span></span>
<span class="line"><span>canvas</span></span>
<span class="line"><span>ping3</span></span>
<span class="line"><span>jieba</span></span>
<span class="line"><span>PyExecJS</span></span>
<span class="line"><span>aiohttp</span></span>
<span class="line"><span>json5</span></span>
<span class="line"><span>pycryptodomex</span></span></code></pre></div><p>依赖管理 - <code>Linux</code> 安装也很简单</p><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>bizCode</span></span>
<span class="line"><span>bizMsg  </span></span>
<span class="line"><span>lxml</span></span></code></pre></div><h3 id="环境变量" tabindex="-1"><a class="header-anchor" href="#环境变量"><span>环境变量</span></a></h3><p>京东的话，这里就是添加CK账号；其他APP就按脚本说明来</p><p>添加变量 - 名称输入 <code>JD_COOKIE</code> ，值输入账号CK</p><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>JD_COOKIE</span></span></code></pre></div><figure><img src="https://img.viptv.work/viptv/qinglong/qinglong-15.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>这样就是添加成功了</p><figure><img src="https://img.viptv.work/viptv/qinglong/qinglong-16.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="其他拓展" tabindex="-1"><a class="header-anchor" href="#其他拓展"><span>其他拓展</span></a></h2><details class="hint-container details"><summary>其他运行指令</summary><div class="language-sh" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 并发</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">task</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> ***</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">.js</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> conc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> JD_COOKIE</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 指定运行</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">task</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> ***</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">.js</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> desi</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> JD_COOKIE</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 1-31</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 更新面板</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ql</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> update</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 删除日志</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ql</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rmlog</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 7</span></span></code></pre></div></details><details class="hint-container details"><summary>Cron定时规则</summary><p>青龙默认定时规则为5组数字，秒为可选项目，不填</p><table><thead><tr><th><strong>分</strong></th><th><strong>时</strong></th><th><strong>天（日）</strong></th><th><strong>月</strong></th><th><strong>周</strong></th></tr></thead><tbody><tr><td>0-59</td><td>0-23</td><td>1-31</td><td>1-12</td><td>0-7</td></tr></tbody></table><p>注：周里的0和7都代表星期天</p><p>而常用的特殊符号表达式，是最关键的了</p><table><thead><tr><th>*</th><th><strong>,</strong></th><th><strong>-</strong></th><th><strong>/</strong></th></tr></thead><tbody><tr><td>代表所有时间段</td><td>分隔时段</td><td>时间范围</td><td>每个单位间隔</td></tr></tbody></table><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>* 例子1：0 */2 8 8 *</span></span>
<span class="line"><span></span></span>
<span class="line"><span>我们参照例子解读</span></span>
<span class="line"><span>分=0；时=*/2；天＝8；月＝8；周＝*；</span></span>
<span class="line"><span></span></span>
<span class="line"><span>解读：8月8号的所有时间段每隔2小时运行一次</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>* 例子2：0 0-22/8 * * *</span></span>
<span class="line"><span></span></span>
<span class="line"><span>我们参照例子解读</span></span>
<span class="line"><span>分=0；时=0-22/8；天＝*；月＝*；周＝*；</span></span>
<span class="line"><span></span></span>
<span class="line"><span>解读：每天的0-22点之间，每隔8小时运行一次</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>* 例子3：0 0,10,22 * * *</span></span>
<span class="line"><span></span></span>
<span class="line"><span>我们参照例子解读</span></span>
<span class="line"><span>分=0；时=0,10,22；天＝*；月＝*；周＝*；</span></span>
<span class="line"><span></span></span>
<span class="line"><span>解读：每天的0点，10点，22点，运行一次</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="hint-container details"><summary>青龙通知修改</summary><p>每个脚本运行完成后，通知下方会有一个链接</p><div class="hint-container tip"><p class="hint-container-title">通知</p><p><code>本通知 By：https://github.com/whyour/qinglong</code></p></div><p>路径 <code>/root/ql/scripts/sendNotify.js</code></p><p>右键-编辑，下滑找到，我们将n后面的修改成自己想要的即可</p><div class="language-diff" data-highlighter="shiki" data-ext="diff" data-title="diff" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">- author = &#39;\\n\\n本通知 By：https://github.com/whyour/qinglong&#39;,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">+ author = &#39;\\n\\n 活动入口:&lt;a href=&quot;https://github.com/yiov&quot;&gt;https://github.com/yiov&lt;/a&gt;&#39;,</span></span></code></pre></div></details><details class="hint-container details"><summary>青龙多开容器</summary><p>文字部分，自己修改一下</p><div class="language-sh" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -dit</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -v</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $PWD</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/自定义目录不能与已有目录重名/data:/ql/data</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 自定义青龙端口后面的不要改:5700</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  --name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 自定义的容器名不能与已有容器重名</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  --hostname</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 上面自定义的容器名</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  --restart</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> unless-stopped</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  whyour/qinglong:latest</span></span></code></pre></div></details><details class="hint-container details"><summary>自己写通知脚本</summary><ul><li>简单版本</li></ul><p>设定的message值等于空，推送的时候就会为空，如果你不设定message，通知就无法调起</p><p>我们可以设一个message值等于空，然后在引用message的时候，在后面添加想要的文字</p><p><code>\${message}\\n\\n 这里填想要的文字</code></p><p>注意：<code>\\n</code> 代表换行</p><details class="hint-container details"><summary>点击查看 简单代码</summary><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/*</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">这里是注释</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">cron 0 8 * * * jbm.js</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> $</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> Env</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;这里填脚本名或其他&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> notify</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> $</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">isNode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() </span><span style="--shiki-light:#0184BC;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> require</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;./sendNotify&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#0184BC;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">message</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;&quot;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">async</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> () </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">$</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">isNode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">             await</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> notify</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sendNotify</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;这里是通知的标题&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span><span style="--shiki-light:#CA1243;--shiki-dark:#C678DD;">\${</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">message</span><span style="--shiki-light:#CA1243;--shiki-dark:#C678DD;">}</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 通知的内容 </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">代表换行\`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    })()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">((</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> $</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">logErr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">finally</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(() </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> $</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">done</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">())</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//固定模板 不要动</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> Env</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">t</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">){</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;undefined&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">!=</span><span style="--shiki-light:#0184BC;--shiki-dark:#C678DD;">typeof</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> process</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">&amp;&amp;</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;">JSON</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">stringify</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">process</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">env</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">indexOf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;GITHUB&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">&gt;-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">&amp;&amp;</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">process</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">exit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">constructor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">t</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">){</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">env</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">t</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}send(t,e=&quot;GET&quot;){t=&quot;string&quot;==typeof t?{url:t}:t;let s=this.get;return&quot;POST&quot;===e&amp;&amp;(s=this.post),new Promise((e,i)=&gt;{s.call(this,t,(t,s,r)=&gt;{t?i(t):e(s)})})}get(t){return this.send.call(this.env,t)}post(t){return this.send.call(this.env,t,&quot;POST&quot;)}}return new class{constructor(t,e){this.name=t,this.http=new s(this),this.data=null,this.dataFile=&quot;box.dat&quot;,this.logs=[],this.isMute=!1,this.isNeedRewrite=!1,this.logSeparator=&quot;\\n&quot;,this.startTime=(new Date).getTime(),Object.assign(this,e),this.log(&quot;&quot;,\`\\ud83d\\udd14\${this.name}, \\u5f00\\u59cb!\`)}isNode(){return&quot;undefined&quot;!=typeof module&amp;&amp;!!module.exports}isQuanX(){return&quot;undefined&quot;!=typeof $task}isSurge(){return&quot;undefined&quot;!=typeof $httpClient&amp;&amp;&quot;undefined&quot;==typeof $loon}isLoon(){return&quot;undefined&quot;!=typeof $loon}toObj(t,e=null){try{return JSON.parse(t)}catch{return e}}toStr(t,e=null){try{return JSON.stringify(t)}catch{return e}}getjson(t,e){let s=e;const i=this.getdata(t);if(i)try{s=JSON.parse(this.getdata(t))}catch{}return s}setjson(t,e){try{return this.setdata(JSON.stringify(t),e)}catch{return!1}}getScript(t){return new Promise(e=&gt;{this.get({url:t},(t,s,i)=&gt;e(i))})}runScript(t,e){return new Promise(s=&gt;{let i=this.getdata(&quot;@chavy_boxjs_userCfgs.httpapi&quot;);i=i?i.replace(/\\n/g,&quot;&quot;).trim():i;let r=this.getdata(&quot;@chavy_boxjs_userCfgs.httpapi_timeout&quot;);r=r?1*r:20,r=e&amp;&amp;e.timeout?e.timeout:r;const[o,h]=i.split(&quot;@&quot;),a={url:\`http://\${h}/v1/scripting/evaluate\`,body:{script_text:t,mock_type:&quot;cron&quot;,timeout:r},headers:{&quot;X-Key&quot;:o,Accept:&quot;*/*&quot;}};this.post(a,(t,e,i)=&gt;s(i))}).catch(t=&gt;this.logErr(t))}loaddata(){if(!this.isNode())return{};{this.fs=this.fs?this.fs:require(&quot;fs&quot;),this.path=this.path?this.path:require(&quot;path&quot;);const t=this.path.resolve(this.dataFile),e=this.path.resolve(process.cwd(),this.dataFile),s=this.fs.existsSync(t),i=!s&amp;&amp;this.fs.existsSync(e);if(!s&amp;&amp;!i)return{};{const i=s?t:e;try{return JSON.parse(this.fs.readFileSync(i))}catch(t){return{}}}}}writedata(){if(this.isNode()){this.fs=this.fs?this.fs:require(&quot;fs&quot;),this.path=this.path?this.path:require(&quot;path&quot;);const t=this.path.resolve(this.dataFile),e=this.path.resolve(process.cwd(),this.dataFile),s=this.fs.existsSync(t),i=!s&amp;&amp;this.fs.existsSync(e),r=JSON.stringify(this.data);s?this.fs.writeFileSync(t,r):i?this.fs.writeFileSync(e,r):this.fs.writeFileSync(t,r)}}lodash_get(t,e,s){const i=e.replace(/\\[(\\d+)\\]/g,&quot;.$1&quot;).split(&quot;.&quot;);let r=t;for(const t of i)if(r=Object(r)[t],void 0===r)return s;return r}lodash_set(t,e,s){return Object(t)!==t?t:(Array.isArray(e)||(e=e.toString().match(/[^.[\\]]+/g)||[]),e.slice(0,-1).reduce((t,s,i)=&gt;Object(t[s])===t[s]?t[s]:t[s]=Math.abs(e[i+1])&gt;&gt;0==+e[i+1]?[]:{},t)[e[e.length-1]]=s,t)}getdata(t){let e=this.getval(t);if(/^@/.test(t)){const[,s,i]=/^@(.*?)\\.(.*?)$/.exec(t),r=s?this.getval(s):&quot;&quot;;if(r)try{const t=JSON.parse(r);e=t?this.lodash_get(t,i,&quot;&quot;):e}catch(t){e=&quot;&quot;}}return e}setdata(t,e){let s=!1;if(/^@/.test(e)){const[,i,r]=/^@(.*?)\\.(.*?)$/.exec(e),o=this.getval(i),h=i?&quot;null&quot;===o?null:o||&quot;{}&quot;:&quot;{}&quot;;try{const e=JSON.parse(h);this.lodash_set(e,r,t),s=this.setval(JSON.stringify(e),i)}catch(e){const o={};this.lodash_set(o,r,t),s=this.setval(JSON.stringify(o),i)}}else s=this.setval(t,e);return s}getval(t){return this.isSurge()||this.isLoon()?$persistentStore.read(t):this.isQuanX()?$prefs.valueForKey(t):this.isNode()?(this.data=this.loaddata(),this.data[t]):this.data&amp;&amp;this.data[t]||null}setval(t,e){return this.isSurge()||this.isLoon()?$persistentStore.write(t,e):this.isQuanX()?$prefs.setValueForKey(t,e):this.isNode()?(this.data=this.loaddata(),this.data[e]=t,this.writedata(),!0):this.data&amp;&amp;this.data[e]||null}initGotEnv(t){this.got=this.got?this.got:require(&quot;got&quot;),this.cktough=this.cktough?this.cktough:require(&quot;tough-cookie&quot;),this.ckjar=this.ckjar?this.ckjar:new this.cktough.CookieJar,t&amp;&amp;(t.headers=t.headers?t.headers:{},void 0===t.headers.Cookie&amp;&amp;void 0===t.cookieJar&amp;&amp;(t.cookieJar=this.ckjar))}get(t,e=(()=&gt;{})){t.headers&amp;&amp;(delete t.headers[&quot;Content-Type&quot;],delete t.headers[&quot;Content-Length&quot;]),this.isSurge()||this.isLoon()?(this.isSurge()&amp;&amp;this.isNeedRewrite&amp;&amp;(t.headers=t.headers||{},Object.assign(t.headers,{&quot;X-Surge-Skip-Scripting&quot;:!1})),$httpClient.get(t,(t,s,i)=&gt;{!t&amp;&amp;s&amp;&amp;(s.body=i,s.statusCode=s.status),e(t,s,i)})):this.isQuanX()?(this.isNeedRewrite&amp;&amp;(t.opts=t.opts||{},Object.assign(t.opts,{hints:!1})),$task.fetch(t).then(t=&gt;{const{statusCode:s,statusCode:i,headers:r,body:o}=t;e(null,{status:s,statusCode:i,headers:r,body:o},o)},t=&gt;e(t))):this.isNode()&amp;&amp;(this.initGotEnv(t),this.got(t).on(&quot;redirect&quot;,(t,e)=&gt;{try{if(t.headers[&quot;set-cookie&quot;]){const s=t.headers[&quot;set-cookie&quot;].map(this.cktough.Cookie.parse).toString();this.ckjar.setCookieSync(s,null),e.cookieJar=this.ckjar}}catch(t){this.logErr(t)}}).then(t=&gt;{const{statusCode:s,statusCode:i,headers:r,body:o}=t;e(null,{status:s,statusCode:i,headers:r,body:o},o)},t=&gt;{const{message:s,response:i}=t;e(s,i,i&amp;&amp;i.body)}))}post(t,e=(()=&gt;{})){if(t.body&amp;&amp;t.headers&amp;&amp;!t.headers[&quot;Content-Type&quot;]&amp;&amp;(t.headers[&quot;Content-Type&quot;]=&quot;application/x-www-form-urlencoded&quot;),t.headers&amp;&amp;delete t.headers[&quot;Content-Length&quot;],this.isSurge()||this.isLoon())this.isSurge()&amp;&amp;this.isNeedRewrite&amp;&amp;(t.headers=t.headers||{},Object.assign(t.headers,{&quot;X-Surge-Skip-Scripting&quot;:!1})),$httpClient.post(t,(t,s,i)=&gt;{!t&amp;&amp;s&amp;&amp;(s.body=i,s.statusCode=s.status),e(t,s,i)});else if(this.isQuanX())t.method=&quot;POST&quot;,this.isNeedRewrite&amp;&amp;(t.opts=t.opts||{},Object.assign(t.opts,{hints:!1})),$task.fetch(t).then(t=&gt;{const{statusCode:s,statusCode:i,headers:r,body:o}=t;e(null,{status:s,statusCode:i,headers:r,body:o},o)},t=&gt;e(t));else if(this.isNode()){this.initGotEnv(t);const{url:s,...i}=t;this.got.post(s,i).then(t=&gt;{const{statusCode:s,statusCode:i,headers:r,body:o}=t;e(null,{status:s,statusCode:i,headers:r,body:o},o)},t=&gt;{const{message:s,response:i}=t;e(s,i,i&amp;&amp;i.body)})}}time(t){let e={&quot;M+&quot;:(new Date).getMonth()+1,&quot;d+&quot;:(new Date).getDate(),&quot;H+&quot;:(new Date).getHours(),&quot;m+&quot;:(new Date).getMinutes(),&quot;s+&quot;:(new Date).getSeconds(),&quot;q+&quot;:Math.floor(((new Date).getMonth()+3)/3),S:(new Date).getMilliseconds()};/(y+)/.test(t)&amp;&amp;(t=t.replace(RegExp.$1,((new Date).getFullYear()+&quot;&quot;).substr(4-RegExp.$1.length)));for(let s in e)new RegExp(&quot;(&quot;+s+&quot;)&quot;).test(t)&amp;&amp;(t=t.replace(RegExp.$1,1==RegExp.$1.length?e[s]:(&quot;00&quot;+e[s]).substr((&quot;&quot;+e[s]).length)));return t}msg(e=t,s=&quot;&quot;,i=&quot;&quot;,r){const o=t=&gt;{if(!t)return t;if(&quot;string&quot;==typeof t)return this.isLoon()?t:this.isQuanX()?{&quot;open-url&quot;:t}:this.isSurge()?{url:t}:void 0;if(&quot;object&quot;==typeof t){if(this.isLoon()){let e=t.openUrl||t.url||t[&quot;open-url&quot;],s=t.mediaUrl||t[&quot;media-url&quot;];return{openUrl:e,mediaUrl:s}}if(this.isQuanX()){let e=t[&quot;open-url&quot;]||t.url||t.openUrl,s=t[&quot;media-url&quot;]||t.mediaUrl;return{&quot;open-url&quot;:e,&quot;media-url&quot;:s}}if(this.isSurge()){let e=t.url||t.openUrl||t[&quot;open-url&quot;];return{url:e}}}};this.isMute||(this.isSurge()||this.isLoon()?$notification.post(e,s,i,o(r)):this.isQuanX()&amp;&amp;$notify(e,s,i,o(r)));let h=[&quot;&quot;,&quot;==============\\ud83d\\udce3\\u7cfb\\u7edf\\u901a\\u77e5\\ud83d\\udce3==============&quot;];h.push(e),s&amp;&amp;h.push(s),i&amp;&amp;h.push(i),console.log(h.join(&quot;\\n&quot;)),this.logs=this.logs.concat(h)}log(...t){t.length&gt;0&amp;&amp;(this.logs=[...this.logs,...t]),console.log(t.join(this.logSeparator))}logErr(t,e){const s=!this.isSurge()&amp;&amp;!this.isQuanX()&amp;&amp;!this.isLoon();s?this.log(&quot;&quot;,\`\\u2757\\ufe0f\${this.name}, \\u9519\\u8bef!\`,t.stack):this.log(&quot;&quot;,\`\\u2757\\ufe0f\${this.name}, \\u9519\\u8bef!\`,t)}wait(t){return new Promise(e=&gt;setTimeout(e,t))}done(t={}){const e=(new Date).getTime(),s=(e-this.startTime)/1e3;this.log(&quot;&quot;,\`\\ud83d\\udd14\${this.name}, \\u7ed3\\u675f! \\ud83d\\udd5b \${s} \\u79d2\`),this.log(),(this.isSurge()||this.isQuanX()||this.isLoon())&amp;&amp;$done(t)}}(t,e)}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><ul><li>完整版本</li></ul><p><code>$.msg($.name, message);</code> 表示调用系统通知（脚本名，消息）</p><p>message += <code>这是第1个数据\\n</code></p><p><code>+=</code> 表示消息累加 <code>\\n</code> 表示换行</p><details class="hint-container details"><summary>点击查看 完整版本代码</summary><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/*</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">这里是注释</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">这里是cron表达式</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">cron 0 8 * * * jbm.js</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//这里设定脚本名</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> $</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> Env</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;这里填脚本名或其他&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//这里是调取青龙通知</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> notify</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> $</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">isNode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() </span><span style="--shiki-light:#0184BC;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> require</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;./sendNotify&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#0184BC;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> notifyFlag</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//0为关闭通知，1为打开通知,默认为1</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> message</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;&#39;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> //块作用域定义message变量</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//async 异步函数 常与await和function一起用</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">async</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> () </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">	await</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> check</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//等待表达式 check只是演示 可以自己根据需求更改</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  //通知体</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">	if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">notifyFlag</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> ==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">		$</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">msg</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">$</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">		if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">$</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">isNode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">			await</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> notify</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sendNotify</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">$</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">		}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//以下3个是async函数的完整体 不要改</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">})()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">((</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> $</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">logErr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">finally</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(() </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> $</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">done</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">())</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//function函数 找到你想要的数据</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> check</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  message</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> +=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \`这是第1个数据</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  message</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> +=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \`这是第2个数据</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//固定模板 不要动</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> Env</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">t</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">){</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;undefined&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">!=</span><span style="--shiki-light:#0184BC;--shiki-dark:#C678DD;">typeof</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> process</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">&amp;&amp;</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;">JSON</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">stringify</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">process</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">env</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">indexOf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;GITHUB&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">&gt;-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">&amp;&amp;</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">process</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">exit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">constructor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">t</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">){</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">env</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">t</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}send(t,e=&quot;GET&quot;){t=&quot;string&quot;==typeof t?{url:t}:t;let s=this.get;return&quot;POST&quot;===e&amp;&amp;(s=this.post),new Promise((e,i)=&gt;{s.call(this,t,(t,s,r)=&gt;{t?i(t):e(s)})})}get(t){return this.send.call(this.env,t)}post(t){return this.send.call(this.env,t,&quot;POST&quot;)}}return new class{constructor(t,e){this.name=t,this.http=new s(this),this.data=null,this.dataFile=&quot;box.dat&quot;,this.logs=[],this.isMute=!1,this.isNeedRewrite=!1,this.logSeparator=&quot;\\n&quot;,this.startTime=(new Date).getTime(),Object.assign(this,e),this.log(&quot;&quot;,\`\\ud83d\\udd14\${this.name}, \\u5f00\\u59cb!\`)}isNode(){return&quot;undefined&quot;!=typeof module&amp;&amp;!!module.exports}isQuanX(){return&quot;undefined&quot;!=typeof $task}isSurge(){return&quot;undefined&quot;!=typeof $httpClient&amp;&amp;&quot;undefined&quot;==typeof $loon}isLoon(){return&quot;undefined&quot;!=typeof $loon}toObj(t,e=null){try{return JSON.parse(t)}catch{return e}}toStr(t,e=null){try{return JSON.stringify(t)}catch{return e}}getjson(t,e){let s=e;const i=this.getdata(t);if(i)try{s=JSON.parse(this.getdata(t))}catch{}return s}setjson(t,e){try{return this.setdata(JSON.stringify(t),e)}catch{return!1}}getScript(t){return new Promise(e=&gt;{this.get({url:t},(t,s,i)=&gt;e(i))})}runScript(t,e){return new Promise(s=&gt;{let i=this.getdata(&quot;@chavy_boxjs_userCfgs.httpapi&quot;);i=i?i.replace(/\\n/g,&quot;&quot;).trim():i;let r=this.getdata(&quot;@chavy_boxjs_userCfgs.httpapi_timeout&quot;);r=r?1*r:20,r=e&amp;&amp;e.timeout?e.timeout:r;const[o,h]=i.split(&quot;@&quot;),a={url:\`http://\${h}/v1/scripting/evaluate\`,body:{script_text:t,mock_type:&quot;cron&quot;,timeout:r},headers:{&quot;X-Key&quot;:o,Accept:&quot;*/*&quot;}};this.post(a,(t,e,i)=&gt;s(i))}).catch(t=&gt;this.logErr(t))}loaddata(){if(!this.isNode())return{};{this.fs=this.fs?this.fs:require(&quot;fs&quot;),this.path=this.path?this.path:require(&quot;path&quot;);const t=this.path.resolve(this.dataFile),e=this.path.resolve(process.cwd(),this.dataFile),s=this.fs.existsSync(t),i=!s&amp;&amp;this.fs.existsSync(e);if(!s&amp;&amp;!i)return{};{const i=s?t:e;try{return JSON.parse(this.fs.readFileSync(i))}catch(t){return{}}}}}writedata(){if(this.isNode()){this.fs=this.fs?this.fs:require(&quot;fs&quot;),this.path=this.path?this.path:require(&quot;path&quot;);const t=this.path.resolve(this.dataFile),e=this.path.resolve(process.cwd(),this.dataFile),s=this.fs.existsSync(t),i=!s&amp;&amp;this.fs.existsSync(e),r=JSON.stringify(this.data);s?this.fs.writeFileSync(t,r):i?this.fs.writeFileSync(e,r):this.fs.writeFileSync(t,r)}}lodash_get(t,e,s){const i=e.replace(/\\[(\\d+)\\]/g,&quot;.$1&quot;).split(&quot;.&quot;);let r=t;for(const t of i)if(r=Object(r)[t],void 0===r)return s;return r}lodash_set(t,e,s){return Object(t)!==t?t:(Array.isArray(e)||(e=e.toString().match(/[^.[\\]]+/g)||[]),e.slice(0,-1).reduce((t,s,i)=&gt;Object(t[s])===t[s]?t[s]:t[s]=Math.abs(e[i+1])&gt;&gt;0==+e[i+1]?[]:{},t)[e[e.length-1]]=s,t)}getdata(t){let e=this.getval(t);if(/^@/.test(t)){const[,s,i]=/^@(.*?)\\.(.*?)$/.exec(t),r=s?this.getval(s):&quot;&quot;;if(r)try{const t=JSON.parse(r);e=t?this.lodash_get(t,i,&quot;&quot;):e}catch(t){e=&quot;&quot;}}return e}setdata(t,e){let s=!1;if(/^@/.test(e)){const[,i,r]=/^@(.*?)\\.(.*?)$/.exec(e),o=this.getval(i),h=i?&quot;null&quot;===o?null:o||&quot;{}&quot;:&quot;{}&quot;;try{const e=JSON.parse(h);this.lodash_set(e,r,t),s=this.setval(JSON.stringify(e),i)}catch(e){const o={};this.lodash_set(o,r,t),s=this.setval(JSON.stringify(o),i)}}else s=this.setval(t,e);return s}getval(t){return this.isSurge()||this.isLoon()?$persistentStore.read(t):this.isQuanX()?$prefs.valueForKey(t):this.isNode()?(this.data=this.loaddata(),this.data[t]):this.data&amp;&amp;this.data[t]||null}setval(t,e){return this.isSurge()||this.isLoon()?$persistentStore.write(t,e):this.isQuanX()?$prefs.setValueForKey(t,e):this.isNode()?(this.data=this.loaddata(),this.data[e]=t,this.writedata(),!0):this.data&amp;&amp;this.data[e]||null}initGotEnv(t){this.got=this.got?this.got:require(&quot;got&quot;),this.cktough=this.cktough?this.cktough:require(&quot;tough-cookie&quot;),this.ckjar=this.ckjar?this.ckjar:new this.cktough.CookieJar,t&amp;&amp;(t.headers=t.headers?t.headers:{},void 0===t.headers.Cookie&amp;&amp;void 0===t.cookieJar&amp;&amp;(t.cookieJar=this.ckjar))}get(t,e=(()=&gt;{})){t.headers&amp;&amp;(delete t.headers[&quot;Content-Type&quot;],delete t.headers[&quot;Content-Length&quot;]),this.isSurge()||this.isLoon()?(this.isSurge()&amp;&amp;this.isNeedRewrite&amp;&amp;(t.headers=t.headers||{},Object.assign(t.headers,{&quot;X-Surge-Skip-Scripting&quot;:!1})),$httpClient.get(t,(t,s,i)=&gt;{!t&amp;&amp;s&amp;&amp;(s.body=i,s.statusCode=s.status),e(t,s,i)})):this.isQuanX()?(this.isNeedRewrite&amp;&amp;(t.opts=t.opts||{},Object.assign(t.opts,{hints:!1})),$task.fetch(t).then(t=&gt;{const{statusCode:s,statusCode:i,headers:r,body:o}=t;e(null,{status:s,statusCode:i,headers:r,body:o},o)},t=&gt;e(t))):this.isNode()&amp;&amp;(this.initGotEnv(t),this.got(t).on(&quot;redirect&quot;,(t,e)=&gt;{try{if(t.headers[&quot;set-cookie&quot;]){const s=t.headers[&quot;set-cookie&quot;].map(this.cktough.Cookie.parse).toString();this.ckjar.setCookieSync(s,null),e.cookieJar=this.ckjar}}catch(t){this.logErr(t)}}).then(t=&gt;{const{statusCode:s,statusCode:i,headers:r,body:o}=t;e(null,{status:s,statusCode:i,headers:r,body:o},o)},t=&gt;{const{message:s,response:i}=t;e(s,i,i&amp;&amp;i.body)}))}post(t,e=(()=&gt;{})){if(t.body&amp;&amp;t.headers&amp;&amp;!t.headers[&quot;Content-Type&quot;]&amp;&amp;(t.headers[&quot;Content-Type&quot;]=&quot;application/x-www-form-urlencoded&quot;),t.headers&amp;&amp;delete t.headers[&quot;Content-Length&quot;],this.isSurge()||this.isLoon())this.isSurge()&amp;&amp;this.isNeedRewrite&amp;&amp;(t.headers=t.headers||{},Object.assign(t.headers,{&quot;X-Surge-Skip-Scripting&quot;:!1})),$httpClient.post(t,(t,s,i)=&gt;{!t&amp;&amp;s&amp;&amp;(s.body=i,s.statusCode=s.status),e(t,s,i)});else if(this.isQuanX())t.method=&quot;POST&quot;,this.isNeedRewrite&amp;&amp;(t.opts=t.opts||{},Object.assign(t.opts,{hints:!1})),$task.fetch(t).then(t=&gt;{const{statusCode:s,statusCode:i,headers:r,body:o}=t;e(null,{status:s,statusCode:i,headers:r,body:o},o)},t=&gt;e(t));else if(this.isNode()){this.initGotEnv(t);const{url:s,...i}=t;this.got.post(s,i).then(t=&gt;{const{statusCode:s,statusCode:i,headers:r,body:o}=t;e(null,{status:s,statusCode:i,headers:r,body:o},o)},t=&gt;{const{message:s,response:i}=t;e(s,i,i&amp;&amp;i.body)})}}time(t){let e={&quot;M+&quot;:(new Date).getMonth()+1,&quot;d+&quot;:(new Date).getDate(),&quot;H+&quot;:(new Date).getHours(),&quot;m+&quot;:(new Date).getMinutes(),&quot;s+&quot;:(new Date).getSeconds(),&quot;q+&quot;:Math.floor(((new Date).getMonth()+3)/3),S:(new Date).getMilliseconds()};/(y+)/.test(t)&amp;&amp;(t=t.replace(RegExp.$1,((new Date).getFullYear()+&quot;&quot;).substr(4-RegExp.$1.length)));for(let s in e)new RegExp(&quot;(&quot;+s+&quot;)&quot;).test(t)&amp;&amp;(t=t.replace(RegExp.$1,1==RegExp.$1.length?e[s]:(&quot;00&quot;+e[s]).substr((&quot;&quot;+e[s]).length)));return t}msg(e=t,s=&quot;&quot;,i=&quot;&quot;,r){const o=t=&gt;{if(!t)return t;if(&quot;string&quot;==typeof t)return this.isLoon()?t:this.isQuanX()?{&quot;open-url&quot;:t}:this.isSurge()?{url:t}:void 0;if(&quot;object&quot;==typeof t){if(this.isLoon()){let e=t.openUrl||t.url||t[&quot;open-url&quot;],s=t.mediaUrl||t[&quot;media-url&quot;];return{openUrl:e,mediaUrl:s}}if(this.isQuanX()){let e=t[&quot;open-url&quot;]||t.url||t.openUrl,s=t[&quot;media-url&quot;]||t.mediaUrl;return{&quot;open-url&quot;:e,&quot;media-url&quot;:s}}if(this.isSurge()){let e=t.url||t.openUrl||t[&quot;open-url&quot;];return{url:e}}}};this.isMute||(this.isSurge()||this.isLoon()?$notification.post(e,s,i,o(r)):this.isQuanX()&amp;&amp;$notify(e,s,i,o(r)));let h=[&quot;&quot;,&quot;==============\\ud83d\\udce3\\u7cfb\\u7edf\\u901a\\u77e5\\ud83d\\udce3==============&quot;];h.push(e),s&amp;&amp;h.push(s),i&amp;&amp;h.push(i),console.log(h.join(&quot;\\n&quot;)),this.logs=this.logs.concat(h)}log(...t){t.length&gt;0&amp;&amp;(this.logs=[...this.logs,...t]),console.log(t.join(this.logSeparator))}logErr(t,e){const s=!this.isSurge()&amp;&amp;!this.isQuanX()&amp;&amp;!this.isLoon();s?this.log(&quot;&quot;,\`\\u2757\\ufe0f\${this.name}, \\u9519\\u8bef!\`,t.stack):this.log(&quot;&quot;,\`\\u2757\\ufe0f\${this.name}, \\u9519\\u8bef!\`,t)}wait(t){return new Promise(e=&gt;setTimeout(e,t))}done(t={}){const e=(new Date).getTime(),s=(e-this.startTime)/1e3;this.log(&quot;&quot;,\`\\ud83d\\udd14\${this.name}, \\u7ed3\\u675f! \\ud83d\\udd5b \${s} \\u79d2\`),this.log(),(this.isSurge()||this.isQuanX()||this.isLoon())&amp;&amp;$done(t)}}(t,e)}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details></details><h2 id="常见问题" tabindex="-1"><a class="header-anchor" href="#常见问题"><span>常见问题</span></a></h2><p>1.拉不了库</p><p>要么是库的问题，要么是代理的问题，github被墙很正常</p><p>解决：手动下载 - 上传 - 然后解压到 <code>/root/ql/repo</code> 或 <code>SSH下载</code></p><div class="language-sh" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#ssh下载</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /roott/ql/repo</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#下载并解压</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">wget</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://codeload.github.com/shufflewzc/faker3/zip/refs/heads/main.zip</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &amp;&amp; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">unzip</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> main.zip</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#改名</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> main</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> shufflewzc_faker3</span></span></code></pre></div><p>2.忘记青龙面板密码</p><p>若密码忘了，在终端用代码查看</p><div class="hint-container tip"><p class="hint-container-title">说明</p><p>password是密码</p><p>宝塔目录下 <code>root/ql/config/auth.json</code> 也可查看</p></div><div class="language-sh" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /root/ql/config/auth.json</span></span></code></pre></div>`,56))])}const y=h(d,[["render",g],["__file","qinglong.html.vue"]]),A=JSON.parse('{"path":"/tutorial/website/qinglong.html","title":"青龙面板的安装及使用","lang":"zh-CN","frontmatter":{"description":"青龙面板的安装及使用 更新时间：2021-11-24 简介 一个支持 Python3、JavaScript、Shell、Typescript 的定时任务管理平台 仓库：https://github.com/whyour/qinglong 镜像：https://hub.docker.com/r/whyour/qinglong tg群：https://t....","head":[["meta",{"property":"og:url","content":"https://www.viptv.work/tutorial/website/qinglong.html"}],["meta",{"property":"og:site_name","content":"VIPTV - 工作室"}],["meta",{"property":"og:title","content":"青龙面板的安装及使用"}],["meta",{"property":"og:description","content":"青龙面板的安装及使用 更新时间：2021-11-24 简介 一个支持 Python3、JavaScript、Shell、Typescript 的定时任务管理平台 仓库：https://github.com/whyour/qinglong 镜像：https://hub.docker.com/r/whyour/qinglong tg群：https://t...."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://img.viptv.work/viptv/qinglong/qinglong-01.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-23T16:29:20.000Z"}],["meta",{"property":"article:modified_time","content":"2025-01-23T16:29:20.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"青龙面板的安装及使用\\",\\"image\\":[\\"https://img.viptv.work/viptv/qinglong/qinglong-01.png\\",\\"https://img.viptv.work/viptv/qinglong/qinglong-02.png\\",\\"https://img.viptv.work/viptv/qinglong/qinglong-03.png\\",\\"https://img.viptv.work/viptv/qinglong/qinglong-04.png\\",\\"https://img.viptv.work/viptv/qinglong/qinglong-05.png\\",\\"https://img.viptv.work/viptv/qinglong/qinglong-06.png\\",\\"https://img.viptv.work/viptv/qinglong/qinglong-07.png\\",\\"https://img.viptv.work/viptv/qinglong/qinglong-08.png\\",\\"https://img.viptv.work/viptv/qinglong/qinglong-09.png\\",\\"https://img.viptv.work/viptv/qinglong/qinglong-10.png\\",\\"https://img.viptv.work/viptv/qinglong/qinglong-11.png\\",\\"https://img.viptv.work/viptv/qinglong/qinglong-12.png\\",\\"https://img.viptv.work/viptv/qinglong/qinglong-13.png\\",\\"https://img.viptv.work/viptv/qinglong/qinglong-14.png\\",\\"https://img.viptv.work/viptv/qinglong/qinglong-15.png\\",\\"https://img.viptv.work/viptv/qinglong/qinglong-16.png\\"],\\"dateModified\\":\\"2025-01-23T16:29:20.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hefung\\",\\"url\\":\\"/about/us\\"}]}"],["link",{"rel":"alternate","type":"application/atom+xml","href":"https://www.viptv.work/atom.xml","title":"VIPTV - 工作室 Atom Feed"}],["link",{"rel":"alternate","type":"application/json","href":"https://www.viptv.work/feed.json","title":"VIPTV - 工作室 JSON Feed"}],["link",{"rel":"alternate","type":"application/rss+xml","href":"https://www.viptv.work/rss.xml","title":"VIPTV - 工作室 RSS Feed"}]]},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"准备条件","slug":"准备条件","link":"#准备条件","children":[]},{"level":2,"title":"安装","slug":"安装","link":"#安装","children":[{"level":3,"title":"拉取镜像","slug":"拉取镜像","link":"#拉取镜像","children":[]},{"level":3,"title":"创建容器","slug":"创建容器","link":"#创建容器","children":[]},{"level":3,"title":"重启防火墙","slug":"重启防火墙","link":"#重启防火墙","children":[]},{"level":3,"title":"放行端口","slug":"放行端口","link":"#放行端口","children":[]}]},{"level":2,"title":"登录面板","slug":"登录面板","link":"#登录面板","children":[{"level":3,"title":"访问","slug":"访问","link":"#访问","children":[]},{"level":3,"title":"命令","slug":"命令","link":"#命令","children":[]}]},{"level":2,"title":"使用","slug":"使用","link":"#使用","children":[{"level":3,"title":"拉库","slug":"拉库","link":"#拉库","children":[]},{"level":3,"title":"安装依赖","slug":"安装依赖","link":"#安装依赖","children":[]},{"level":3,"title":"环境变量","slug":"环境变量","link":"#环境变量","children":[]}]},{"level":2,"title":"其他拓展","slug":"其他拓展","link":"#其他拓展","children":[]},{"level":2,"title":"常见问题","slug":"常见问题","link":"#常见问题","children":[]}],"git":{"createdTime":1737649760000,"updatedTime":1737649760000,"contributors":[{"name":"github-actions[bot]","username":"github-actions[bot]","email":"28900094+github-actions[bot]@users.noreply.github.com","commits":1,"url":"https://github.com/github-actions[bot]"}]},"readingTime":{"minutes":14.45,"words":4336},"filePathRelative":"tutorial/website/qinglong.md","localizedDate":"2025年1月24日","excerpt":"","autoDesc":true}');export{y as comp,A as data};

import{_ as s,c as a,f as e,o as t}from"./app-C0itxEw4.js";const p={};function i(l,n){return t(),a("div",null,n[0]||(n[0]=[e(`<blockquote><p>最近一直在忙，今天抽空写一下 H5 和 Native 的交互</p></blockquote><h2 id="一、选择" tabindex="-1"><a class="header-anchor" href="#一、选择"><span>一、选择</span></a></h2><ul><li>项目本身 webview 使用的是 WKWebview，其实 WKWebview 自带的 messageHandle 也可以满足此需求</li><li>JSContext,源自于 JavaScriptCore 框架中的东西，最后不使用此方案源于一下几点 <ul><li>但是其中繁杂的字符串使用，让我觉的可能会由于粗心出现不可预知的错误</li><li>加载时机的问题，当你重新 loadrequest 的时候，会导致 js 注入失败</li><li>回调方法略复杂</li></ul></li><li>JavaScriptBridge，最后选择此库源于以下几点 <ul><li>使用简单，注册完毕之后设置完代理，只需要负责注册方法和调用方法</li><li>回调简单，两端回调 responsecallback 包含在注册的方法中。使用 block</li><li>三端通用，JavaScript 和 iOS、Android 都可以（<a href="https://github.com/wendux/WebViewJavascriptBridge" target="_blank" rel="noopener noreferrer">Android 版本库</a>）</li><li>Ps :关于 Android 版本库，其中很多是按照 iOS 版的 JavaScriptBridge 改写的。但是其中有很多问题，尤其是各种调用时机问题，上面的链接是经过我旁边的 Android 小哥试了四五个版本之后发现的，修复了各种改写版的问题</li></ul></li></ul><h2 id="二、使用" tabindex="-1"><a class="header-anchor" href="#二、使用"><span>二、使用</span></a></h2><ul><li>首先需要引入 WebViewJavascriptBridge 库</li></ul><div class="language-objc line-numbers-mode" data-highlighter="prismjs" data-ext="objc" data-title="objc"><pre><code><span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">import</span> <span class="token string">&quot;WebViewJavascriptBridge.h&quot;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>初始化，此处为了方便子类使用，所以在基类中注册 bridge，并 return bridge 对象，方便子类调用</li></ul><div class="language-objc line-numbers-mode" data-highlighter="prismjs" data-ext="objc" data-title="objc"><pre><code><span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">mark <span class="token operator">-</span> 桥接</span></span></span>
<span class="line"></span>
<span class="line"><span class="token operator">-</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>InitializeWebViewJavascriptBridge <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 注册桥接</span></span>
<span class="line">    <span class="token keyword">self</span><span class="token punctuation">.</span>bridge <span class="token operator">=</span> <span class="token punctuation">[</span>SWHybridManager setJavaScriptBridgeWithWebView<span class="token punctuation">:</span><span class="token keyword">self</span><span class="token punctuation">.</span>webView controller<span class="token punctuation">:</span><span class="token keyword">self</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">[</span>WKWebViewJavascriptBridge enableLogging<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">WKWebViewJavascriptBridge <span class="token operator">*</span>bridge <span class="token operator">=</span> <span class="token punctuation">[</span>WKWebViewJavascriptBridge bridgeForWebView<span class="token punctuation">:</span>webView<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">[</span>bridge setWebViewDelegate<span class="token punctuation">:</span>controller<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>注册方法供 JavaScript 调用</li></ul><div class="language-objc line-numbers-mode" data-highlighter="prismjs" data-ext="objc" data-title="objc"><pre><code><span class="line">__weak <span class="token keyword">typeof</span><span class="token punctuation">(</span>controller<span class="token punctuation">)</span>wController <span class="token operator">=</span> controller<span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">/****************************公共方法注册-Start*********************/</span></span>
<span class="line">    <span class="token comment">//MARK:打开窗体</span></span>
<span class="line">    <span class="token punctuation">[</span>bridge registerHandler<span class="token punctuation">:</span>HandlerFunctionNameOpenWindow handler<span class="token punctuation">:</span><span class="token operator">^</span><span class="token punctuation">(</span>id data<span class="token punctuation">,</span> WVJBResponseCallback responseCallback<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        __strong <span class="token keyword">typeof</span><span class="token punctuation">(</span>wController<span class="token punctuation">)</span>sController <span class="token operator">=</span> wController<span class="token punctuation">;</span></span>
<span class="line">        <span class="token function">NSLog</span><span class="token punctuation">(</span><span class="token string">@&quot;\\n调用了openWindow: %@&quot;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        NSDictionary <span class="token operator">*</span>dict <span class="token operator">=</span> <span class="token punctuation">(</span>NSDictionary <span class="token operator">*</span><span class="token punctuation">)</span>data<span class="token punctuation">;</span></span>
<span class="line">        SWOpenWindowModel <span class="token operator">*</span>model <span class="token operator">=</span> <span class="token punctuation">[</span>SWOpenWindowModel yy_modelWithDictionary<span class="token punctuation">:</span>dict<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">[</span><span class="token keyword">self</span> pushViewController<span class="token punctuation">:</span>sController data<span class="token punctuation">:</span>model responseCallback<span class="token punctuation">:</span>responseCallback<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>调用 JavaScript 方法</li></ul><div class="language-objc line-numbers-mode" data-highlighter="prismjs" data-ext="objc" data-title="objc"><pre><code><span class="line"><span class="token punctuation">[</span><span class="token keyword">self</span><span class="token punctuation">.</span>bridge callHandler<span class="token punctuation">:</span>callFunctionNameGetSearchKeyWord data<span class="token punctuation">:</span>json<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="三、方法名定义" tabindex="-1"><a class="header-anchor" href="#三、方法名定义"><span>三、方法名定义</span></a></h2><ul><li>因为方法名的定义是字符串，所以建议采用常量字符串，防止拼写错误</li><li>其次不建议采用宏定义</li><li>我采用以下方法</li><li>桥接管理类的.h</li></ul><div class="language-objc line-numbers-mode" data-highlighter="prismjs" data-ext="objc" data-title="objc"><pre><code><span class="line"><span class="token comment">/**打开窗体 */</span></span>
<span class="line">FOUNDATION_EXPORT  NSString <span class="token operator">*</span><span class="token keyword">const</span> HandlerFunctionNameOpenWindow<span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">/** 关闭窗口*/</span></span>
<span class="line">FOUNDATION_EXPORT  NSString <span class="token operator">*</span><span class="token keyword">const</span> HandlerFunctionNameCloseWindow<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>桥接管理类的.m</li></ul><div class="language-objc line-numbers-mode" data-highlighter="prismjs" data-ext="objc" data-title="objc"><pre><code><span class="line"><span class="token comment">/**打开窗体 */</span></span>
<span class="line">NSString <span class="token operator">*</span><span class="token keyword">const</span> HandlerFunctionNameOpenWindow <span class="token operator">=</span> <span class="token string">@&quot;openWindow&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">/** 关闭窗口*/</span></span>
<span class="line">NSString <span class="token operator">*</span><span class="token keyword">const</span> HandlerFunctionNameCloseWindow <span class="token operator">=</span> <span class="token string">@&quot;closeWindow&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>使用时直接使用常量字符串即可</li><li>注意点：如类似我使用在基类传入控制器和 webview 到管理类中，在类中使用 controller 要注意循环引用，否则会导致控制器无法释放</li></ul><div class="language-objc line-numbers-mode" data-highlighter="prismjs" data-ext="objc" data-title="objc"><pre><code><span class="line"><span class="token operator">+</span> <span class="token punctuation">(</span>WKWebViewJavascriptBridge <span class="token operator">*</span><span class="token punctuation">)</span>setJavaScriptBridgeWithWebView<span class="token punctuation">:</span><span class="token punctuation">(</span>WKWebView <span class="token operator">*</span><span class="token punctuation">)</span>webView controller<span class="token punctuation">:</span><span class="token punctuation">(</span>__kindof SWBaseWebViewController <span class="token operator">*</span><span class="token punctuation">)</span>controller<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">__weak <span class="token keyword">typeof</span><span class="token punctuation">(</span>controller<span class="token punctuation">)</span>wController <span class="token operator">=</span> controller<span class="token punctuation">;</span> <span class="token comment">// 弱引用传入控制器</span></span>
<span class="line">__strong <span class="token keyword">typeof</span><span class="token punctuation">(</span>wController<span class="token punctuation">)</span>sController <span class="token operator">=</span> wController<span class="token punctuation">;</span> <span class="token comment">// 在block内部强引用</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="四、数据传输" tabindex="-1"><a class="header-anchor" href="#四、数据传输"><span>四、数据传输</span></a></h2><ul><li>iOS 端直接返回字典即可</li><li>我代码中是返回 json 字符串，为了与 Android 统一，方便 H5 解析数据</li></ul><h2 id="五、javascript-代码" tabindex="-1"><a class="header-anchor" href="#五、javascript-代码"><span>五、JavaScript 代码</span></a></h2><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">function</span> <span class="token function">setupWebViewJavascriptBridge</span><span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span>WebViewJavascriptBridge<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token function">callback</span><span class="token punctuation">(</span>WebViewJavascriptBridge<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span>WVJBCallbacks<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> window<span class="token punctuation">.</span>WVJBCallbacks<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  window<span class="token punctuation">.</span>WVJBCallbacks <span class="token operator">=</span> <span class="token punctuation">[</span>callback<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">var</span> WVJBIframe <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;iframe&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  WVJBIframe<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">&quot;none&quot;</span><span class="token punctuation">;</span></span>
<span class="line">  WVJBIframe<span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token string">&quot;https://__bridge_loaded__&quot;</span><span class="token punctuation">;</span></span>
<span class="line">  document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>WVJBIframe<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>WVJBIframe<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token function">setupWebViewJavascriptBridge</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">bridge</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">/* Initialize your app here */</span></span>
<span class="line"></span>
<span class="line">  bridge<span class="token punctuation">.</span><span class="token function">registerHandler</span><span class="token punctuation">(</span><span class="token string">&quot;JS Echo&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span> responseCallback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;JS Echo called with:&quot;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">responseCallback</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  bridge<span class="token punctuation">.</span><span class="token function">callHandler</span><span class="token punctuation">(</span></span>
<span class="line">    <span class="token string">&quot;ObjC Echo&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">{</span> <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">&quot;value&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token keyword">function</span> <span class="token function">responseCallback</span><span class="token punctuation">(</span><span class="token parameter">responseData</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;JS received response:&quot;</span><span class="token punctuation">,</span> responseData<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="六、注意事项" tabindex="-1"><a class="header-anchor" href="#六、注意事项"><span>六、注意事项</span></a></h2><ul><li>如果产生调用不通的问题，多为 JavaScript 调用时机问题</li><li>注意桥接的代理</li></ul>`,26)]))}const c=s(p,[["render",i],["__file","JavaScriptBridge.html.vue"]]),u=JSON.parse('{"path":"/tutorial/iPhone/other/JavaScriptBridge.html","title":"WebViewJavascriptBridge","lang":"zh-CN","frontmatter":{"title":"WebViewJavascriptBridge","date":"2018-08-05T00:00:00.000Z","category":["iOS"],"tag":["iOS","JavaScript"],"description":"最近一直在忙，今天抽空写一下 H5 和 Native 的交互 一、选择 项目本身 webview 使用的是 WKWebview，其实 WKWebview 自带的 messageHandle 也可以满足此需求 JSContext,源自于 JavaScriptCore 框架中的东西，最后不使用此方案源于一下几点 但是其中繁杂的字符串使用，让我觉的可能会由于...","head":[["meta",{"property":"og:url","content":"https://www.viptv.work/tutorial/iPhone/other/JavaScriptBridge.html"}],["meta",{"property":"og:site_name","content":"VIPTV - 工作室"}],["meta",{"property":"og:title","content":"WebViewJavascriptBridge"}],["meta",{"property":"og:description","content":"最近一直在忙，今天抽空写一下 H5 和 Native 的交互 一、选择 项目本身 webview 使用的是 WKWebview，其实 WKWebview 自带的 messageHandle 也可以满足此需求 JSContext,源自于 JavaScriptCore 框架中的东西，最后不使用此方案源于一下几点 但是其中繁杂的字符串使用，让我觉的可能会由于..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-26T16:32:11.000Z"}],["meta",{"property":"article:tag","content":"iOS"}],["meta",{"property":"article:tag","content":"JavaScript"}],["meta",{"property":"article:published_time","content":"2018-08-05T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-26T16:32:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"WebViewJavascriptBridge\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2018-08-05T00:00:00.000Z\\",\\"dateModified\\":\\"2024-11-26T16:32:11.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hefung\\",\\"url\\":\\"/about/us\\"}]}"]]},"headers":[{"level":2,"title":"一、选择","slug":"一、选择","link":"#一、选择","children":[]},{"level":2,"title":"二、使用","slug":"二、使用","link":"#二、使用","children":[]},{"level":2,"title":"三、方法名定义","slug":"三、方法名定义","link":"#三、方法名定义","children":[]},{"level":2,"title":"四、数据传输","slug":"四、数据传输","link":"#四、数据传输","children":[]},{"level":2,"title":"五、JavaScript 代码","slug":"五、javascript-代码","link":"#五、javascript-代码","children":[]},{"level":2,"title":"六、注意事项","slug":"六、注意事项","link":"#六、注意事项","children":[]}],"git":{"createdTime":1732638731000,"updatedTime":1732638731000,"contributors":[{"name":"github-actions[bot]","email":"28900094+github-actions[bot]@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":2.7,"words":809},"filePathRelative":"tutorial/iPhone/other/JavaScriptBridge.md","localizedDate":"2018年8月5日","excerpt":"","autoDesc":true}');export{c as comp,u as data};

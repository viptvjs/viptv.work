import{_ as s,c as a,f as t,o as e}from"./app-Dtxy9s7Q.js";const p={};function i(o,n){return e(),a("div",null,n[0]||(n[0]=[t(`<blockquote><p><strong>timelineLogistics</strong> 是模仿淘宝物流信息时间轴界面的自定义 View</p></blockquote><h2 id="效果" tabindex="-1"><a class="header-anchor" href="#效果"><span>效果</span></a></h2><figure><img src="http://i4.piimg.com/1949/af2a87e889d29664.png" alt="Markdown" tabindex="0" loading="lazy"><figcaption>Markdown</figcaption></figure><blockquote><p>使用正则表达式判断字符是否为电话号码，用 YYLable 进行富文本电话拨打</p></blockquote><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用</span></a></h2><ul><li><p>引入 Masonry,YYkit 库</p><ul><li>使用了 MAsonry 进行布局</li><li>使用了 YYkit 中的 YYLable 进行富文本电话号码点击拨打电话</li></ul></li><li><p>初始化数组</p><div class="language-objc line-numbers-mode" data-highlighter="prismjs" data-ext="objc" data-title="objc"><pre><code><span class="line">  NSArray <span class="token operator">*</span>titleArr <span class="token operator">=</span> <span class="token punctuation">[</span>NSArray arrayWithObjects<span class="token punctuation">:</span></span>
<span class="line">               <span class="token string">@&quot;[北京通州区杨庄公司锦园服务部]快件已被27号楼e站代签收&quot;</span><span class="token punctuation">,</span></span>
<span class="line">               <span class="token string">@&quot;[北京通州区杨庄公司]到达目的地网店，快件将很快进行派送&quot;</span> <span class="token punctuation">,</span></span>
<span class="line">               <span class="token string">@&quot;[北京通州区杨庄公司]进行派件扫描；派送业务员：周志军；联系电话：13522464946&quot;</span><span class="token punctuation">,</span></span>
<span class="line">               <span class="token string">@&quot;[北京分拨中心]在分拨中心进行卸车扫描&quot;</span><span class="token punctuation">,</span></span>
<span class="line">               <span class="token string">@&quot;[浙江杭州分拨中心]在分拨中心进行称重扫描&quot;</span><span class="token punctuation">,</span></span>
<span class="line">               <span class="token string">@&quot;[浙江杭州下城区三里亭公司]进行揽件扫描&quot;</span><span class="token punctuation">,</span>nil<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">  NSArray <span class="token operator">*</span>timeArr <span class="token operator">=</span> <span class="token punctuation">[</span>NSArray arrayWithObjects<span class="token punctuation">:</span></span>
<span class="line">              <span class="token string">@&quot;2017-07-04 12:59:00&quot;</span><span class="token punctuation">,</span></span>
<span class="line">              <span class="token string">@&quot;2017-07-03 10:59:00&quot;</span><span class="token punctuation">,</span></span>
<span class="line">              <span class="token string">@&quot;2017-07-03 08:22:00&quot;</span><span class="token punctuation">,</span></span>
<span class="line">              <span class="token string">@&quot;2017-07-03 03:34:22&quot;</span><span class="token punctuation">,</span></span>
<span class="line">              <span class="token string">@&quot;2017-07-02 12:59:00&quot;</span><span class="token punctuation">,</span></span>
<span class="line">              <span class="token string">@&quot;2017-07-02 08:10:00&quot;</span><span class="token punctuation">,</span>nil<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">\`\`\`</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><ul><li><p>转为模型</p><div class="language-objc line-numbers-mode" data-highlighter="prismjs" data-ext="objc" data-title="objc"><pre><code><span class="line"><span class="token keyword">for</span> <span class="token punctuation">(</span>NSInteger i <span class="token operator">=</span> titleArr<span class="token punctuation">.</span>count<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&gt;=</span><span class="token number">0</span> <span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">  OKLogisticModel <span class="token operator">*</span> model <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>OKLogisticModel alloc<span class="token punctuation">]</span>init<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">  model<span class="token punctuation">.</span>dsc <span class="token operator">=</span> <span class="token punctuation">[</span>titleArr objectAtIndex<span class="token punctuation">:</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">  model<span class="token punctuation">.</span>date <span class="token operator">=</span> <span class="token punctuation">[</span>timeArr objectAtIndex<span class="token punctuation">:</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">[</span><span class="token keyword">self</span><span class="token punctuation">.</span>dataArry addObject<span class="token punctuation">:</span>model<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>初始化控制器</p><div class="language-objc line-numbers-mode" data-highlighter="prismjs" data-ext="objc" data-title="objc"><pre><code><span class="line">OKLogisticsView <span class="token operator">*</span> logis <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>OKLogisticsView alloc<span class="token punctuation">]</span>initWithDatas<span class="token punctuation">:</span><span class="token keyword">self</span><span class="token punctuation">.</span>dataArry<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token comment">// 给headView赋值</span></span>
<span class="line">  logis<span class="token punctuation">.</span>wltype<span class="token operator">=</span><span class="token string">@&quot;已签收&quot;</span><span class="token punctuation">;</span></span>
<span class="line">  logis<span class="token punctuation">.</span>number <span class="token operator">=</span> <span class="token string">@&quot;3908723967437&quot;</span><span class="token punctuation">;</span></span>
<span class="line">  logis<span class="token punctuation">.</span>company <span class="token operator">=</span> <span class="token string">@&quot;韵达快运&quot;</span><span class="token punctuation">;</span></span>
<span class="line">  logis<span class="token punctuation">.</span>phone <span class="token operator">=</span> <span class="token string">@&quot;400-821-6789&quot;</span><span class="token punctuation">;</span></span>
<span class="line">  logis<span class="token punctuation">.</span>imageUrl <span class="token operator">=</span> <span class="token string">@&quot;http://pic40.nipic.com/20140420/12064170_201114370112_2.jpg&quot;</span><span class="token punctuation">;</span></span>
<span class="line">  logis<span class="token punctuation">.</span>frame <span class="token operator">=</span> <span class="token function">CGRectMake</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">,</span> OKScreenWidth<span class="token punctuation">,</span> OKScreenHeight<span class="token operator">-</span><span class="token number">64</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">[</span><span class="token keyword">self</span><span class="token punctuation">.</span>view addSubview<span class="token punctuation">:</span>logis<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><blockquote><p><a href="https://github.com/OrageKK/timelineLogistics" target="_blank" rel="noopener noreferrer">Demo下载</a>,如果对你有帮助麻烦点个Star</p></blockquote>`,8)]))}const c=s(p,[["render",i],["__file","timelineLogistics.html.vue"]]),u=JSON.parse('{"path":"/tutorial/iPhone/ui/timelineLogistics.html","title":"iOS timelineLogistics","lang":"zh-CN","frontmatter":{"title":"iOS timelineLogistics","date":"2017-07-12T00:00:00.000Z","category":["iOS"],"tag":["iOS","Demo"],"description":"timelineLogistics 是模仿淘宝物流信息时间轴界面的自定义 View 效果 MarkdownMarkdown 使用正则表达式判断字符是否为电话号码，用 YYLable 进行富文本电话拨打 使用 引入 Masonry,YYkit 库 使用了 MAsonry 进行布局 使用了 YYkit 中的 YYLable 进行富文本电话号码点击拨打电话 ...","head":[["meta",{"property":"og:url","content":"https://www.viptv.work/tutorial/iPhone/ui/timelineLogistics.html"}],["meta",{"property":"og:site_name","content":"VIPTV - 工作室"}],["meta",{"property":"og:title","content":"iOS timelineLogistics"}],["meta",{"property":"og:description","content":"timelineLogistics 是模仿淘宝物流信息时间轴界面的自定义 View 效果 MarkdownMarkdown 使用正则表达式判断字符是否为电话号码，用 YYLable 进行富文本电话拨打 使用 引入 Masonry,YYkit 库 使用了 MAsonry 进行布局 使用了 YYkit 中的 YYLable 进行富文本电话号码点击拨打电话 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"http://i4.piimg.com/1949/af2a87e889d29664.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-04T08:17:06.000Z"}],["meta",{"property":"article:tag","content":"iOS"}],["meta",{"property":"article:tag","content":"Demo"}],["meta",{"property":"article:published_time","content":"2017-07-12T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-04T08:17:06.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"iOS timelineLogistics\\",\\"image\\":[\\"http://i4.piimg.com/1949/af2a87e889d29664.png\\"],\\"datePublished\\":\\"2017-07-12T00:00:00.000Z\\",\\"dateModified\\":\\"2024-11-04T08:17:06.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hefung\\",\\"url\\":\\"/about/us\\"}]}"]]},"headers":[{"level":2,"title":"效果","slug":"效果","link":"#效果","children":[]},{"level":2,"title":"使用","slug":"使用","link":"#使用","children":[]}],"git":{"createdTime":1730708226000,"updatedTime":1730708226000,"contributors":[{"name":"Mr. HeFung","email":"28900094+HeFung@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":1.32,"words":397},"filePathRelative":"tutorial/iPhone/ui/timelineLogistics.md","localizedDate":"2017年7月12日","excerpt":"","autoDesc":true}');export{c as comp,u as data};

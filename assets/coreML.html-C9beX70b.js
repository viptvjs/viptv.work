import{_ as a,c as s,f as e,o as t}from"./app-CHyicvv-.js";const p={};function o(i,n){return t(),s("div",null,n[0]||(n[0]=[e(`<blockquote><p>CoreML 是 iOS 11 新推出的机器学习框架，是人工智能的核心内容，他可以在训练好的机器学习模型应用到 APP 中</p></blockquote><figure><img src="http://upload-images.jianshu.io/upload_images/74454-4726f1eccb39b18c.png?imageMogr2/auto-orient/strip|imageView2/2/w/1240" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>所谓已训练模型 (trained model)指的是对一组训练数据应用了某个机器学习算法后，所生成的一组结果 Core ML 是领域特定 (domain-specific) 框架和功能的基础所在。Core ML 为 Vision 提供了图像处理的支持，为 Foundation 提供了自然语言处理的支持（例如 NSLinguisticTagger 类），为 <a href="https://developer.apple.com/documentation/gameplaykit" target="_blank" rel="noopener noreferrer">GameplayKit</a> 提供了对学习决策树 (learned decision tree) 进行分析的支持。Core ML 本身是基于底层基本类型而建立的，包括 Accelerate、BNNS 以及 Metal Performance Shaders 等。</p><h2 id="获取模型" tabindex="-1"><a class="header-anchor" href="#获取模型"><span>获取模型</span></a></h2><p>Core ML 支持多种机器学习模型，其中包括了神经网络 (Neural Network)、组合树 (Tree Ensemble)、支持向量机 (Support Vector Machine) 以及广义线性模型 (Generalized Linear Model)。Core ML 的运行需要使用 Core ML 模型格式（也就是以 .mlmodel 扩展名结尾的模型）。</p><p>Apple 提供了一些常见的<a href="https://developer.apple.com/machine-learning/" target="_blank" rel="noopener noreferrer">开源模型</a>供大家使用，这些模型已经使用了 Core ML 模型格式。您可以自行下载这些模型，然后就可以开始在应用中使用它们了。</p><h2 id="工程实例" tabindex="-1"><a class="header-anchor" href="#工程实例"><span>工程实例</span></a></h2><p>首先因为 CoreML 和 Vision 都是 iOS 11 才有的功能，你要确保 Xcode9 和 iOS 11 的设备，当然模拟器也可以。开发语言使用 Swift4</p><ol><li><p>将模型添加到 Xcode 中<br> 创建工程并引入模型文件<br><img src="https://storage1.cuntuku.com/2017/11/21/Snip20171121_6.png" alt="Snip20171121_6.png" loading="lazy"><br> 单击这个文件就可以看到这个模型的详细信息<br><a href="https://cuntuku.com/image/KNKHr" target="_blank" rel="noopener noreferrer"><img src="https://storage2.cuntuku.com/2017/11/21/Snip20171121_7.md.png" alt="Snip20171121_7.md.png" loading="lazy"></a><br> 下面是这个模型的官方介绍</p><blockquote><p>Detects the dominant objects present in an image from a set of 1000 categories such as trees, animals, food, vehicles, people, and more.大意为可以从 1000 个类别中筛选传树木、动物、食品、汽车、人等等。</p></blockquote></li><li><p>模型解读<br> inputs 中写了需要一个 image 大小 299*299；outputs 里会有两个参数 classLabelProbs 和 classLabel<br> ，classLabelProbs 是一个[string:Double]的字典数组，数组里每一个字典就是这个输入图片分析得出可能的一个结果 string 就是对图片类型的描述，而 double 就是可能性百分比。另一个 classLabel 就是最有可能的一个一个结果描述</p><pre><code>*Model Class*下面有这个类文件点进去可以看到如下三个类

**input输入源，可以看到它需要一个CVPixelBuffer格式的图片作为输入**
[![Snip20171121_8.md.png](https://storage2.cuntuku.com/2017/11/21/Snip20171121_8.md.png)](https://cuntuku.com/image/KNlCE)
**output可以看到输出的两个参数classLabel和classLabelProbs正式我们上面有介绍过的所有可能的结果数组与最有可能的结果描述**
[![Snip20171121_9.md.png](https://storage1.cuntuku.com/2017/11/21/Snip20171121_9.md.png)](https://cuntuku.com/image/KNgTJ)
**inceptionv3调用这个类的Prediction方法来开始进行分析**
[![Snip20171121_10.md.png](https://storage1.cuntuku.com/2017/11/21/Snip20171121_10.md.png)](https://cuntuku.com/image/KN1Im)
</code></pre></li><li><p>编写代码<br> 定义一个 imageView，一个 Label，一个 button<br> 点击按钮打开相册选取图片，选取完成执行下面的方法，然后再 label 显示分析结果</p></li></ol><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line">	<span class="token keyword">func</span> <span class="token function-definition function">process</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> image<span class="token punctuation">:</span> <span class="token class-name">UIImage</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        imageView<span class="token punctuation">.</span>image <span class="token operator">=</span> image</span>
<span class="line">        <span class="token comment">// 需要CVPixelBuffer格式的输入源</span></span>
<span class="line">        <span class="token keyword">guard</span> <span class="token keyword">let</span> pixelBuffer <span class="token operator">=</span> image<span class="token punctuation">.</span><span class="token function">pixelBuffer</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">299</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">299</span><span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">return</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token comment">//I have \`Use of unresolved identifier &#39;Inceptionv3&#39;\` error here when I use New Build System (File &gt; Project Settings)   ¯\\_(ツ)_/¯</span></span>
<span class="line">        <span class="token keyword">let</span> model <span class="token operator">=</span> <span class="token class-name">Inceptionv3</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">do</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">// 调用model的prediction方法进行分析</span></span>
<span class="line">            <span class="token keyword">let</span> output <span class="token operator">=</span> <span class="token keyword">try</span> model<span class="token punctuation">.</span><span class="token function">prediction</span><span class="token punctuation">(</span>image<span class="token punctuation">:</span> pixelBuffer<span class="token punctuation">)</span></span>
<span class="line">            <span class="token comment">// 打印输出结果</span></span>
<span class="line">            <span class="token keyword">let</span> probs <span class="token operator">=</span> output<span class="token punctuation">.</span>classLabelProbs<span class="token punctuation">.</span>sorted <span class="token punctuation">{</span> <span class="token short-argument">$0</span><span class="token punctuation">.</span>value <span class="token operator">&gt;</span> <span class="token short-argument">$1</span><span class="token punctuation">.</span>value <span class="token punctuation">}</span></span>
<span class="line">            <span class="token keyword">if</span> <span class="token keyword">let</span> prob <span class="token operator">=</span> probs<span class="token punctuation">.</span>first <span class="token punctuation">{</span></span>
<span class="line">                <span class="token class-name">Label</span><span class="token punctuation">.</span>text <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;</span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation">prob<span class="token punctuation">.</span>key</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string"> </span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation">prob<span class="token punctuation">.</span>value</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">&quot;</span></span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">catch</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">presentAlertController</span><span class="token punctuation">(</span>withTitle<span class="token punctuation">:</span> title<span class="token punctuation">,</span></span>
<span class="line">                                        message<span class="token punctuation">:</span> error<span class="token punctuation">.</span>localizedDescription<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="运行效果" tabindex="-1"><a class="header-anchor" href="#运行效果"><span>运行效果</span></a></h2><p><a href="https://cuntuku.com/image/KNToV" target="_blank" rel="noopener noreferrer"><img src="https://storage2.cuntuku.com/2017/11/21/Snip20171121_3.md.png" alt="Snip20171121_3.md.png" loading="lazy"></a><br><a href="https://cuntuku.com/image/KNvFW" target="_blank" rel="noopener noreferrer"><img src="https://storage1.cuntuku.com/2017/11/21/Snip20171121_4.md.png" alt="Snip20171121_4.md.png" loading="lazy"></a><br><a href="https://cuntuku.com/image/KNNdd" target="_blank" rel="noopener noreferrer"><img src="https://storage2.cuntuku.com/2017/11/21/Snip20171121_5.md.png" alt="Snip20171121_5.md.png" loading="lazy"></a></p><h2 id="demo" tabindex="-1"><a class="header-anchor" href="#demo"><span>Demo</span></a></h2><p><a href="https://github.com/OrageKK/coreML-Examples" target="_blank" rel="noopener noreferrer">👉Demo 下载</a><br><strong>如果有帮助烦请点 star</strong></p>`,14)]))}const c=a(p,[["render",o],["__file","coreML.html.vue"]]),r=JSON.parse('{"path":"/tutorial/iPhone/other/coreML.html","title":"初探机器学习框架CoreML","lang":"zh-CN","frontmatter":{"title":"初探机器学习框架CoreML","date":"2017-11-21T00:00:00.000Z","category":["iOS"],"tag":["iOS"],"description":"CoreML 是 iOS 11 新推出的机器学习框架，是人工智能的核心内容，他可以在训练好的机器学习模型应用到 APP 中 所谓已训练模型 (trained model)指的是对一组训练数据应用了某个机器学习算法后，所生成的一组结果 Core ML 是领域特定 (domain-specific) 框架和功能的基础所在。Core ML 为 Vision ...","head":[["meta",{"property":"og:url","content":"https://www.viptv.work/tutorial/iPhone/other/coreML.html"}],["meta",{"property":"og:site_name","content":"VIPTV - 工作室"}],["meta",{"property":"og:title","content":"初探机器学习框架CoreML"}],["meta",{"property":"og:description","content":"CoreML 是 iOS 11 新推出的机器学习框架，是人工智能的核心内容，他可以在训练好的机器学习模型应用到 APP 中 所谓已训练模型 (trained model)指的是对一组训练数据应用了某个机器学习算法后，所生成的一组结果 Core ML 是领域特定 (domain-specific) 框架和功能的基础所在。Core ML 为 Vision ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"http://upload-images.jianshu.io/upload_images/74454-4726f1eccb39b18c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-26T12:51:30.000Z"}],["meta",{"property":"article:tag","content":"iOS"}],["meta",{"property":"article:published_time","content":"2017-11-21T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-26T12:51:30.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"初探机器学习框架CoreML\\",\\"image\\":[\\"http://upload-images.jianshu.io/upload_images/74454-4726f1eccb39b18c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\\",\\"https://storage1.cuntuku.com/2017/11/21/Snip20171121_6.png\\",\\"https://storage2.cuntuku.com/2017/11/21/Snip20171121_7.md.png\\",\\"https://storage2.cuntuku.com/2017/11/21/Snip20171121_8.md.png\\",\\"https://storage1.cuntuku.com/2017/11/21/Snip20171121_9.md.png\\",\\"https://storage1.cuntuku.com/2017/11/21/Snip20171121_10.md.png\\",\\"https://storage2.cuntuku.com/2017/11/21/Snip20171121_3.md.png\\",\\"https://storage1.cuntuku.com/2017/11/21/Snip20171121_4.md.png\\",\\"https://storage2.cuntuku.com/2017/11/21/Snip20171121_5.md.png\\"],\\"datePublished\\":\\"2017-11-21T00:00:00.000Z\\",\\"dateModified\\":\\"2024-11-26T12:51:30.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hefung\\",\\"url\\":\\"/about/us\\"}]}"]]},"headers":[{"level":2,"title":"获取模型","slug":"获取模型","link":"#获取模型","children":[]},{"level":2,"title":"工程实例","slug":"工程实例","link":"#工程实例","children":[]},{"level":2,"title":"运行效果","slug":"运行效果","link":"#运行效果","children":[]},{"level":2,"title":"Demo","slug":"demo","link":"#demo","children":[]}],"git":{"createdTime":1732625490000,"updatedTime":1732625490000,"contributors":[{"name":"github-actions[bot]","email":"28900094+github-actions[bot]@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":3.04,"words":912},"filePathRelative":"tutorial/iPhone/other/coreML.md","localizedDate":"2017年11月21日","excerpt":"","autoDesc":true}');export{c as comp,r as data};

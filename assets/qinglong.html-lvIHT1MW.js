import{_ as c,c as l,f as e,a as s,e as t,h as o,g as a,d as u,o as i}from"./app-CLr8Jzig.js";const k={},r={class:"hint-container details"};function d(g,n){const p=u("RouteLink");return i(),l("div",null,[n[11]||(n[11]=e('<h1 id="青龙面板的安装及使用" tabindex="-1"><a class="header-anchor" href="#青龙面板的安装及使用"><span>青龙面板的安装及使用</span></a></h1><blockquote><p>更新时间：2021-11-24</p></blockquote><h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><p>一个支持 Python3、JavaScript、Shell、Typescript 的定时任务管理平台</p><p>仓库：<a href="https://github.com/whyour/qinglong" target="_blank" rel="noopener noreferrer">https://github.com/whyour/qinglong</a></p><p>镜像：<a href="https://hub.docker.com/r/whyour/qinglong" target="_blank" rel="noopener noreferrer">https://hub.docker.com/r/whyour/qinglong</a></p><p>tg群：<a href="https://t.me/jiao_long" target="_blank" rel="noopener noreferrer">https://t.me/jiao_long</a></p><figure><img src="https://img.viptv.work/viptv/qinglong/qinglong-01.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="准备条件" tabindex="-1"><a class="header-anchor" href="#准备条件"><span>准备条件</span></a></h2>',9)),s("ul",null,[s("li",null,[s("p",null,[t(p,{to:"/tutorial/website/Server/"},{default:o(()=>n[0]||(n[0]=[a("服务器")])),_:1})])]),s("li",null,[s("p",null,[t(p,{to:"/tutorial/website/shell/"},{default:o(()=>n[1]||(n[1]=[a("shell工具")])),_:1})])]),s("li",null,[s("p",null,[t(p,{to:"/tutorial/website/docker.html"},{default:o(()=>n[2]||(n[2]=[a("安装docker")])),_:1})])])]),n[12]||(n[12]=e(`<h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h2><h3 id="拉取镜像" tabindex="-1"><a class="header-anchor" href="#拉取镜像"><span>拉取镜像</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token builtin class-name">cd</span></span>
<span class="line"><span class="token function">docker</span> pull whyour/qinglong:latest</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://img.viptv.work/viptv/qinglong/qinglong-02.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="创建容器" tabindex="-1"><a class="header-anchor" href="#创建容器"><span>创建容器</span></a></h3><p>冒号前的 <code>5700</code> 是映射端口建议改，冒号后的 5700 是监听端口，尽量不要动</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">docker</span> run <span class="token parameter variable">-dit</span> <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-v</span> <span class="token environment constant">$PWD</span>/ql/data:/ql/data <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token comment"># 冒号后面的 5700 为默认端口，如果设置了 QlPort, 需要跟 QlPort 保持一致</span></span>
<span class="line highlighted">  <span class="token parameter variable">-p</span> <span class="token number">5700</span>:5700 <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token comment"># 部署路径非必须，比如 /test</span></span>
<span class="line">  <span class="token parameter variable">-e</span> <span class="token assign-left variable">QlBaseUrl</span><span class="token operator">=</span><span class="token string">&quot;/&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token comment"># 部署端口非必须，当使用 host 模式时，可以设置服务启动后的端口，默认 5700</span></span>
<span class="line">  <span class="token parameter variable">-e</span> <span class="token assign-left variable">QlPort</span><span class="token operator">=</span><span class="token string">&quot;5700&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">--name</span> qinglong <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">--hostname</span> qinglong <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">--restart</span> unless-stopped <span class="token punctuation">\\</span></span>
<span class="line">  whyour/qinglong:latest</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">说明</p><p>我这里端口改成了 <code>5600</code></p></div><figure><img src="https://img.viptv.work/viptv/qinglong/qinglong-03.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="重启防火墙" tabindex="-1"><a class="header-anchor" href="#重启防火墙"><span>重启防火墙</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">systemctl start firewalld</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="https://img.viptv.work/viptv/qinglong/qinglong-04.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="放行端口" tabindex="-1"><a class="header-anchor" href="#放行端口"><span>放行端口</span></a></h3>`,13)),s("p",null,[n[4]||(n[4]=a("放行5700端口，另外 ")),t(p,{to:"/tutorial/website/Server/tencent.html#%E9%98%B2%E7%81%AB%E5%A2%99"},{default:o(()=>n[3]||(n[3]=[a("服务器里的端口(安全组/防火墙)")])),_:1}),n[5]||(n[5]=a(" 也要放行"))]),n[13]||(n[13]=e(`<div class="hint-container tip"><p class="hint-container-title">说明</p><p>如果你映射端口改了，请放行更改后的映射端口</p></div><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">firewall-cmd <span class="token parameter variable">--zone</span><span class="token operator">=</span>public --add-port<span class="token operator">=</span><span class="token number">5600</span>/tcp <span class="token parameter variable">--permanent</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">firewall-cmd <span class="token parameter variable">--zone</span><span class="token operator">=</span>public --add-port<span class="token operator">=</span><span class="token number">5700</span>/tcp <span class="token parameter variable">--permanent</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="https://img.viptv.work/viptv/qinglong/qinglong-05.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="登录面板" tabindex="-1"><a class="header-anchor" href="#登录面板"><span>登录面板</span></a></h2><h3 id="访问" tabindex="-1"><a class="header-anchor" href="#访问"><span>访问</span></a></h3><p>青龙面板地址：<code>http://你的公网ip:端口</code></p>`,7)),s("details",r,[n[9]||(n[9]=s("summary",null,"网页打不开？",-1)),n[10]||(n[10]=s("p",null,"请检查，是否开启对应的端口！",-1)),s("p",null,[n[7]||(n[7]=a("虚拟机请安装 ")),t(p,{to:"/tutorial/website/BT.html"},{default:o(()=>n[6]||(n[6]=[a("宝塔面板")])),_:1}),n[8]||(n[8]=a(" 后查看端口是否放行，再次访问即可"))])]),n[14]||(n[14]=e(`<figure><img src="https://img.viptv.work/viptv/qinglong/qinglong-06.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>开始安装-设置账户密码-提交</p><div class="hint-container tip"><p class="hint-container-title">说明</p><p>通知可以先跳过，之后再添加，完成即可</p></div><figure><img src="https://img.viptv.work/viptv/qinglong/qinglong-07.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>登录青龙，进入青龙前端</p><figure><img src="https://img.viptv.work/viptv/qinglong/qinglong-08.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://img.viptv.work/viptv/qinglong/qinglong-09.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="命令" tabindex="-1"><a class="header-anchor" href="#命令"><span>命令</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 更新并重启青龙</span></span>
<span class="line">ql update</span>
<span class="line"><span class="token comment"># 查看日志</span></span>
<span class="line"><span class="token function">docker</span> logs <span class="token parameter variable">-f</span> qinglong                                                    </span>
<span class="line"><span class="token comment"># 运行自定义脚本extra.sh</span></span>
<span class="line">ql extra                                                     </span>
<span class="line"><span class="token comment"># 添加单个脚本文件</span></span>
<span class="line">ql raw <span class="token operator">&lt;</span>file_url<span class="token operator">&gt;</span>                                             </span>
<span class="line"><span class="token comment"># 添加单个仓库的指定脚本</span></span>
<span class="line">ql repo <span class="token operator">&lt;</span>repo_url<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>whitelist<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>blacklist<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>dependence<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>branch<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>extensions<span class="token operator">&gt;</span></span>
<span class="line"><span class="token comment"># 删除旧日志</span></span>
<span class="line">ql rmlog <span class="token operator">&lt;</span>days<span class="token operator">&gt;</span>                                              </span>
<span class="line"><span class="token comment"># 启动tg-bot</span></span>
<span class="line">ql bot                                                       </span>
<span class="line"><span class="token comment"># 检测青龙环境并修复</span></span>
<span class="line">ql check                                                     </span>
<span class="line"><span class="token comment"># 重置登录错误次数</span></span>
<span class="line">ql resetlet                                                  </span>
<span class="line"><span class="token comment"># 禁用两步登录</span></span>
<span class="line">ql resettfa                                                  </span>
<span class="line"></span>
<span class="line">---</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 依次执行，如果设置了随机延迟，将随机延迟一定秒数</span></span>
<span class="line">task <span class="token operator">&lt;</span>file_path<span class="token operator">&gt;</span>                                             </span>
<span class="line"><span class="token comment"># 依次执行，无论是否设置了随机延迟，均立即运行，前台会输出日，同时记录在日志文件中</span></span>
<span class="line">task <span class="token operator">&lt;</span>file_path<span class="token operator">&gt;</span> now                                         </span>
<span class="line"><span class="token comment"># 并发执行，无论是否设置了随机延迟，均立即运行，前台不产生日，直接记录在日志文件中，且可指定账号执行</span></span>
<span class="line">task <span class="token operator">&lt;</span>file_path<span class="token operator">&gt;</span> conc <span class="token operator">&lt;</span>env_name<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>account_number<span class="token operator">&gt;</span><span class="token punctuation">(</span>可选的<span class="token punctuation">)</span> </span>
<span class="line"><span class="token comment"># 指定账号执行，无论是否设置了随机延迟，均立即运行 </span></span>
<span class="line">task <span class="token operator">&lt;</span>file_path<span class="token operator">&gt;</span> desi <span class="token operator">&lt;</span>env_name<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>account_number<span class="token operator">&gt;</span>      </span>
<span class="line"><span class="token comment"># 设置任务超时时间   </span></span>
<span class="line">task <span class="token parameter variable">-m</span> <span class="token operator">&lt;</span>max_time<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>file_path<span class="token operator">&gt;</span></span>
<span class="line"><span class="token comment"># 使用 -- 分割，-- 后面的参数会传给脚本，下面的例子，脚本就可接收到参数 -u whyour -p password</span></span>
<span class="line">task <span class="token operator">&lt;</span>file_path<span class="token operator">&gt;</span> -- <span class="token parameter variable">-u</span> whyour <span class="token parameter variable">-p</span> password</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用</span></a></h2><h3 id="拉库" tabindex="-1"><a class="header-anchor" href="#拉库"><span>拉库</span></a></h3><p>右上角，添加任务</p><figure><img src="https://img.viptv.work/viptv/qinglong/qinglong-10.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>拉取库脚本文件，就用faker的京东脚本演示</p><p>faker3内部互助版</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">ql repo https://ghproxy.com/https://github.com/shufflewzc/faker3.git &quot;jd_|jx_|gua_|jddj_|jdCookie&quot; &quot;activity|backUp&quot; &quot;^jd[^_]|USER|function|utils|sendNotify|ZooFaker_Necklace.js|JDJRValidator_|sign_graphics_validate|ql|JDSignValidator|magic|depend|h5sts&quot; &quot;main&quot;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">说明</p><p>这里添加后先禁用，了解 <a href="#%E5%85%B6%E4%BB%96%E6%8B%93%E5%B1%95">cron定时规则</a> 再来改</p></div><figure><img src="https://img.viptv.work/viptv/qinglong/qinglong-11.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>确定好之后，点确定，之后运行，等待一会再刷新</p><figure><img src="https://img.viptv.work/viptv/qinglong/qinglong-12.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>多等一会，以免有些脚本没有加载</p><figure><img src="https://img.viptv.work/viptv/qinglong/qinglong-13.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="安装依赖" tabindex="-1"><a class="header-anchor" href="#安装依赖"><span>安装依赖</span></a></h3><p>依赖管理 - <code>Nodejs</code> ，自动拆分 <code>是</code></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">png-js</span>
<span class="line">@types/node  </span>
<span class="line">require</span>
<span class="line">typescript</span>
<span class="line">crypto-js</span>
<span class="line">prettytable</span>
<span class="line">dotenv</span>
<span class="line">jsdom</span>
<span class="line">date-fns</span>
<span class="line">tough-cookie</span>
<span class="line">tslib</span>
<span class="line">ws@7.4.3</span>
<span class="line">ts-md5</span>
<span class="line">jsdom -g</span>
<span class="line">jieba</span>
<span class="line">fs</span>
<span class="line">form-data</span>
<span class="line">json5</span>
<span class="line">global-agent </span>
<span class="line">png-js</span>
<span class="line">@types/node  </span>
<span class="line">require</span>
<span class="line">typescript</span>
<span class="line">js-base64</span>
<span class="line">axios</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://img.viptv.work/viptv/qinglong/qinglong-14.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>依赖管理 - <code>Python3</code> 我是直接失败的，实在想装参考下面步骤</p><div class="hint-container tip"><p class="hint-container-title">说明</p><p><code>qinglong</code> 为容器名</p></div><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> qinglong <span class="token function">bash</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">curl</span> <span class="token parameter variable">-sS</span> https://bootstrap.pypa.io/get-pip.py <span class="token operator">|</span> python3</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>然后再执行下列依赖即可</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">requests</span>
<span class="line">canvas</span>
<span class="line">ping3</span>
<span class="line">jieba</span>
<span class="line">PyExecJS</span>
<span class="line">aiohttp</span>
<span class="line">json5</span>
<span class="line">pycryptodomex</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>依赖管理 - <code>Linux</code> 安装也很简单</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">bizCode</span>
<span class="line">bizMsg  </span>
<span class="line">lxml</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="环境变量" tabindex="-1"><a class="header-anchor" href="#环境变量"><span>环境变量</span></a></h3><p>京东的话，这里就是添加CK账号；其他APP就按脚本说明来</p><p>添加变量 - 名称输入 <code>JD_COOKIE</code> ，值输入账号CK</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">JD_COOKIE</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="https://img.viptv.work/viptv/qinglong/qinglong-15.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>这样就是添加成功了</p><figure><img src="https://img.viptv.work/viptv/qinglong/qinglong-16.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="其他拓展" tabindex="-1"><a class="header-anchor" href="#其他拓展"><span>其他拓展</span></a></h2><details class="hint-container details"><summary>其他运行指令</summary><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 并发</span></span>
<span class="line">task ***.js conc JD_COOKIE</span>
<span class="line"><span class="token comment"># 指定运行</span></span>
<span class="line">task ***.js desi JD_COOKIE <span class="token number">1</span>-31</span>
<span class="line"><span class="token comment"># 更新面板</span></span>
<span class="line">ql update</span>
<span class="line"><span class="token comment"># 删除日志</span></span>
<span class="line">ql rmlog <span class="token number">7</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="hint-container details"><summary>Cron定时规则</summary><p>青龙默认定时规则为5组数字，秒为可选项目，不填</p><table><thead><tr><th><strong>分</strong></th><th><strong>时</strong></th><th><strong>天（日）</strong></th><th><strong>月</strong></th><th><strong>周</strong></th></tr></thead><tbody><tr><td>0-59</td><td>0-23</td><td>1-31</td><td>1-12</td><td>0-7</td></tr></tbody></table><p>注：周里的0和7都代表星期天</p><p>而常用的特殊符号表达式，是最关键的了</p><table><thead><tr><th>*</th><th><strong>,</strong></th><th><strong>-</strong></th><th><strong>/</strong></th></tr></thead><tbody><tr><td>代表所有时间段</td><td>分隔时段</td><td>时间范围</td><td>每个单位间隔</td></tr></tbody></table><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">* 例子1：0 */2 8 8 *</span>
<span class="line"></span>
<span class="line">我们参照例子解读</span>
<span class="line">分=0；时=*/2；天＝8；月＝8；周＝*；</span>
<span class="line"></span>
<span class="line">解读：8月8号的所有时间段每隔2小时运行一次</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">* 例子2：0 0-22/8 * * *</span>
<span class="line"></span>
<span class="line">我们参照例子解读</span>
<span class="line">分=0；时=0-22/8；天＝*；月＝*；周＝*；</span>
<span class="line"></span>
<span class="line">解读：每天的0-22点之间，每隔8小时运行一次</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">* 例子3：0 0,10,22 * * *</span>
<span class="line"></span>
<span class="line">我们参照例子解读</span>
<span class="line">分=0；时=0,10,22；天＝*；月＝*；周＝*；</span>
<span class="line"></span>
<span class="line">解读：每天的0点，10点，22点，运行一次</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="hint-container details"><summary>青龙通知修改</summary><p>每个脚本运行完成后，通知下方会有一个链接</p><div class="hint-container tip"><p class="hint-container-title">通知</p><p><code>本通知 By：https://github.com/whyour/qinglong</code></p></div><p>路径 <code>/root/ql/scripts/sendNotify.js</code></p><p>右键-编辑，下滑找到，我们将n后面的修改成自己想要的即可</p><div class="language-diff line-numbers-mode" data-highlighter="prismjs" data-ext="diff" data-title="diff"><pre><code><span class="line"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> author = &#39;\\n\\n本通知 By：https://github.com/whyour/qinglong&#39;,</span>
<span class="line"></span></span></span>
<span class="line"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> author = &#39;\\n\\n 活动入口:&lt;a href=&quot;https://github.com/yiov&quot;&gt;https://github.com/yiov&lt;/a&gt;&#39;,</span>
<span class="line"></span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="hint-container details"><summary>青龙多开容器</summary><p>文字部分，自己修改一下</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">docker</span> run <span class="token parameter variable">-dit</span> <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-v</span> <span class="token environment constant">$PWD</span>/自定义目录不能与已有目录重名/data:/ql/data <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-p</span> 自定义青龙端口后面的不要改:5700 <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">--name</span> 自定义的容器名不能与已有容器重名 <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">--hostname</span> 上面自定义的容器名 <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">--restart</span> unless-stopped <span class="token punctuation">\\</span></span>
<span class="line">  whyour/qinglong:latest</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="hint-container details"><summary>自己写通知脚本</summary><ul><li>简单版本</li></ul><p>设定的message值等于空，推送的时候就会为空，如果你不设定message，通知就无法调起</p><p>我们可以设一个message值等于空，然后在引用message的时候，在后面添加想要的文字</p><p><code>\${message}\\n\\n 这里填想要的文字</code></p><p>注意：<code>\\n</code> 代表换行</p><details class="hint-container details"><summary>点击查看 简单代码</summary><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">/*</span>
<span class="line">这里是注释</span>
<span class="line"></span>
<span class="line">cron 0 8 * * * jbm.js</span>
<span class="line">*/</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> $ <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Env</span><span class="token punctuation">(</span><span class="token string">&quot;这里填脚本名或其他&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> notify <span class="token operator">=</span> $<span class="token punctuation">.</span><span class="token function">isNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./sendNotify&#39;</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span></span>
<span class="line">message <span class="token operator">=</span> <span class="token string">&quot;&quot;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">(</span>$<span class="token punctuation">.</span><span class="token function">isNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">             <span class="token keyword">await</span> notify<span class="token punctuation">.</span><span class="token function">sendNotify</span><span class="token punctuation">(</span><span class="token string">&quot;这里是通知的标题&quot;</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>message<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\n\\n 通知的内容 \\n代表换行</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> $<span class="token punctuation">.</span><span class="token function">logErr</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> $<span class="token punctuation">.</span><span class="token function">done</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token comment">//固定模板 不要动</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">Env</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token string">&quot;undefined&quot;</span><span class="token operator">!=</span><span class="token keyword">typeof</span> process<span class="token operator">&amp;&amp;</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;GITHUB&quot;</span><span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token operator">-</span><span class="token number">1</span><span class="token operator">&amp;&amp;</span>process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">s</span><span class="token punctuation">{</span><span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>env<span class="token operator">=</span>t<span class="token punctuation">}</span><span class="token function">send</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>e<span class="token operator">=</span><span class="token string">&quot;GET&quot;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>t<span class="token operator">=</span><span class="token string">&quot;string&quot;</span><span class="token operator">==</span><span class="token keyword">typeof</span> t<span class="token operator">?</span><span class="token punctuation">{</span><span class="token literal-property property">url</span><span class="token operator">:</span>t<span class="token punctuation">}</span><span class="token operator">:</span>t<span class="token punctuation">;</span><span class="token keyword">let</span> s<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>get<span class="token punctuation">;</span><span class="token keyword">return</span><span class="token string">&quot;POST&quot;</span><span class="token operator">===</span>e<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>s<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>post<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">e<span class="token punctuation">,</span>i</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token function">s</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span>t<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>s<span class="token punctuation">,</span>r</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>t<span class="token operator">?</span><span class="token function">i</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token operator">:</span><span class="token function">e</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">get</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>env<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>env<span class="token punctuation">,</span>t<span class="token punctuation">,</span><span class="token string">&quot;POST&quot;</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">class</span><span class="token punctuation">{</span><span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token operator">=</span>t<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>http<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">s</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>dataFile<span class="token operator">=</span><span class="token string">&quot;box.dat&quot;</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>logs<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>isMute<span class="token operator">=</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>isNeedRewrite<span class="token operator">=</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>logSeparator<span class="token operator">=</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>startTime<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\\ud83d\\udd14</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, \\u5f00\\u59cb!</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">isNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span><span class="token string">&quot;undefined&quot;</span><span class="token operator">!=</span><span class="token keyword">typeof</span> module<span class="token operator">&amp;&amp;</span><span class="token operator">!</span><span class="token operator">!</span>module<span class="token punctuation">.</span>exports<span class="token punctuation">}</span><span class="token function">isQuanX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span><span class="token string">&quot;undefined&quot;</span><span class="token operator">!=</span><span class="token keyword">typeof</span> $task<span class="token punctuation">}</span><span class="token function">isSurge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span><span class="token string">&quot;undefined&quot;</span><span class="token operator">!=</span><span class="token keyword">typeof</span> $httpClient<span class="token operator">&amp;&amp;</span><span class="token string">&quot;undefined&quot;</span><span class="token operator">==</span><span class="token keyword">typeof</span> $loon<span class="token punctuation">}</span><span class="token function">isLoon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span><span class="token string">&quot;undefined&quot;</span><span class="token operator">!=</span><span class="token keyword">typeof</span> $loon<span class="token punctuation">}</span><span class="token function">toObj</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e<span class="token operator">=</span><span class="token keyword">null</span></span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">try</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">{</span><span class="token keyword">return</span> e<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token function">toStr</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e<span class="token operator">=</span><span class="token keyword">null</span></span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">try</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">{</span><span class="token keyword">return</span> e<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token function">getjson</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">let</span> s<span class="token operator">=</span>e<span class="token punctuation">;</span><span class="token keyword">const</span> i<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getdata</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token keyword">try</span><span class="token punctuation">{</span>s<span class="token operator">=</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getdata</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token keyword">return</span> s<span class="token punctuation">}</span><span class="token function">setjson</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">try</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setdata</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">{</span><span class="token keyword">return</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token function">getScript</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">url</span><span class="token operator">:</span>t<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>s<span class="token punctuation">,</span>i</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token function">e</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">runScript</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">s</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getdata</span><span class="token punctuation">(</span><span class="token string">&quot;@chavy_boxjs_userCfgs.httpapi&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">=</span>i<span class="token operator">?</span>i<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\n</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span>i<span class="token punctuation">;</span><span class="token keyword">let</span> r<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getdata</span><span class="token punctuation">(</span><span class="token string">&quot;@chavy_boxjs_userCfgs.httpapi_timeout&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>r<span class="token operator">=</span>r<span class="token operator">?</span><span class="token number">1</span><span class="token operator">*</span>r<span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">,</span>r<span class="token operator">=</span>e<span class="token operator">&amp;&amp;</span>e<span class="token punctuation">.</span>timeout<span class="token operator">?</span>e<span class="token punctuation">.</span>timeout<span class="token operator">:</span>r<span class="token punctuation">;</span><span class="token keyword">const</span><span class="token punctuation">[</span>o<span class="token punctuation">,</span>h<span class="token punctuation">]</span><span class="token operator">=</span>i<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;@&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token punctuation">{</span><span class="token literal-property property">url</span><span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">http://</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>h<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/v1/scripting/evaluate</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span><span class="token literal-property property">body</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">script_text</span><span class="token operator">:</span>t<span class="token punctuation">,</span><span class="token literal-property property">mock_type</span><span class="token operator">:</span><span class="token string">&quot;cron&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">timeout</span><span class="token operator">:</span>r<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token literal-property property">headers</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token string-property property">&quot;X-Key&quot;</span><span class="token operator">:</span>o<span class="token punctuation">,</span><span class="token literal-property property">Accept</span><span class="token operator">:</span><span class="token string">&quot;*/*&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e<span class="token punctuation">,</span>i</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token function">s</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token operator">=&gt;</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">logErr</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">loaddata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">return</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>fs<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>fs<span class="token operator">?</span><span class="token keyword">this</span><span class="token punctuation">.</span>fs<span class="token operator">:</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;fs&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>path<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>path<span class="token operator">?</span><span class="token keyword">this</span><span class="token punctuation">.</span>path<span class="token operator">:</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;path&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> t<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>dataFile<span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>dataFile<span class="token punctuation">)</span><span class="token punctuation">,</span>s<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span>i<span class="token operator">=</span><span class="token operator">!</span>s<span class="token operator">&amp;&amp;</span><span class="token keyword">this</span><span class="token punctuation">.</span>fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>s<span class="token operator">&amp;&amp;</span><span class="token operator">!</span>i<span class="token punctuation">)</span><span class="token keyword">return</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">{</span><span class="token keyword">const</span> i<span class="token operator">=</span>s<span class="token operator">?</span>t<span class="token operator">:</span>e<span class="token punctuation">;</span><span class="token keyword">try</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token function">writedata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>fs<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>fs<span class="token operator">?</span><span class="token keyword">this</span><span class="token punctuation">.</span>fs<span class="token operator">:</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;fs&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>path<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>path<span class="token operator">?</span><span class="token keyword">this</span><span class="token punctuation">.</span>path<span class="token operator">:</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;path&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> t<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>dataFile<span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>dataFile<span class="token punctuation">)</span><span class="token punctuation">,</span>s<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span>i<span class="token operator">=</span><span class="token operator">!</span>s<span class="token operator">&amp;&amp;</span><span class="token keyword">this</span><span class="token punctuation">.</span>fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">,</span>r<span class="token operator">=</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>s<span class="token operator">?</span><span class="token keyword">this</span><span class="token punctuation">.</span>fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>r<span class="token punctuation">)</span><span class="token operator">:</span>i<span class="token operator">?</span><span class="token keyword">this</span><span class="token punctuation">.</span>fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span>r<span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>r<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token function">lodash_get</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e<span class="token punctuation">,</span>s</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">const</span> i<span class="token operator">=</span>e<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\[(\\d+)\\]</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span><span class="token string">&quot;.$1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> r<span class="token operator">=</span>t<span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> t <span class="token keyword">of</span> i<span class="token punctuation">)</span><span class="token keyword">if</span><span class="token punctuation">(</span>r<span class="token operator">=</span><span class="token function">Object</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">===</span>r<span class="token punctuation">)</span><span class="token keyword">return</span> s<span class="token punctuation">;</span><span class="token keyword">return</span> r<span class="token punctuation">}</span><span class="token function">lodash_set</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e<span class="token punctuation">,</span>s</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token function">Object</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token operator">!==</span>t<span class="token operator">?</span>t<span class="token operator">:</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token operator">||</span><span class="token punctuation">(</span>e<span class="token operator">=</span>e<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[^.[\\]]+</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>s<span class="token punctuation">,</span>i</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token function">Object</span><span class="token punctuation">(</span>t<span class="token punctuation">[</span>s<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">===</span>t<span class="token punctuation">[</span>s<span class="token punctuation">]</span><span class="token operator">?</span>t<span class="token punctuation">[</span>s<span class="token punctuation">]</span><span class="token operator">:</span>t<span class="token punctuation">[</span>s<span class="token punctuation">]</span><span class="token operator">=</span>Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>e<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">&gt;&gt;</span><span class="token number">0</span><span class="token operator">==</span><span class="token operator">+</span>e<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">?</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">[</span>e<span class="token punctuation">[</span>e<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">=</span>s<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">getdata</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">let</span> e<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getval</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^@</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">const</span><span class="token punctuation">[</span><span class="token punctuation">,</span>s<span class="token punctuation">,</span>i<span class="token punctuation">]</span><span class="token operator">=</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^@(.*?)\\.(.*?)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span>r<span class="token operator">=</span>s<span class="token operator">?</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getval</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token operator">:</span><span class="token string">&quot;&quot;</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token keyword">try</span><span class="token punctuation">{</span><span class="token keyword">const</span> t<span class="token operator">=</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">;</span>e<span class="token operator">=</span>t<span class="token operator">?</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">lodash_get</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>i<span class="token punctuation">,</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>e<span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">{</span>e<span class="token operator">=</span><span class="token string">&quot;&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">return</span> e<span class="token punctuation">}</span><span class="token function">setdata</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">let</span> s<span class="token operator">=</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^@</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">const</span><span class="token punctuation">[</span><span class="token punctuation">,</span>i<span class="token punctuation">,</span>r<span class="token punctuation">]</span><span class="token operator">=</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^@(.*?)\\.(.*?)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">,</span>o<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getval</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span>h<span class="token operator">=</span>i<span class="token operator">?</span><span class="token string">&quot;null&quot;</span><span class="token operator">===</span>o<span class="token operator">?</span><span class="token keyword">null</span><span class="token operator">:</span>o<span class="token operator">||</span><span class="token string">&quot;{}&quot;</span><span class="token operator">:</span><span class="token string">&quot;{}&quot;</span><span class="token punctuation">;</span><span class="token keyword">try</span><span class="token punctuation">{</span><span class="token keyword">const</span> e<span class="token operator">=</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>h<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">lodash_set</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span>r<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span>s<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setval</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">const</span> o<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">lodash_set</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span>r<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span>s<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setval</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">else</span> s<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setval</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> s<span class="token punctuation">}</span><span class="token function">getval</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isSurge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isLoon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span>$persistentStore<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isQuanX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span>$prefs<span class="token punctuation">.</span><span class="token function">valueForKey</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">loaddata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token operator">&amp;&amp;</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token operator">||</span><span class="token keyword">null</span><span class="token punctuation">}</span><span class="token function">setval</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isSurge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isLoon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span>$persistentStore<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isQuanX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span>$prefs<span class="token punctuation">.</span><span class="token function">setValueForKey</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">loaddata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">[</span>e<span class="token punctuation">]</span><span class="token operator">=</span>t<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">writedata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token operator">&amp;&amp;</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">[</span>e<span class="token punctuation">]</span><span class="token operator">||</span><span class="token keyword">null</span><span class="token punctuation">}</span><span class="token function">initGotEnv</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>got<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>got<span class="token operator">?</span><span class="token keyword">this</span><span class="token punctuation">.</span>got<span class="token operator">:</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;got&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>cktough<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>cktough<span class="token operator">?</span><span class="token keyword">this</span><span class="token punctuation">.</span>cktough<span class="token operator">:</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;tough-cookie&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>ckjar<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>ckjar<span class="token operator">?</span><span class="token keyword">this</span><span class="token punctuation">.</span>ckjar<span class="token operator">:</span><span class="token keyword">new</span> <span class="token class-name">this<span class="token punctuation">.</span>cktough<span class="token punctuation">.</span>CookieJar</span><span class="token punctuation">,</span>t<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>headers<span class="token operator">=</span>t<span class="token punctuation">.</span>headers<span class="token operator">?</span>t<span class="token punctuation">.</span>headers<span class="token operator">:</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">===</span>t<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>Cookie<span class="token operator">&amp;&amp;</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">===</span>t<span class="token punctuation">.</span>cookieJar<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>cookieJar<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>ckjar<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">get</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>e<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>t<span class="token punctuation">.</span>headers<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span><span class="token keyword">delete</span> t<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token keyword">delete</span> t<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&quot;Content-Length&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isSurge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isLoon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isSurge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token keyword">this</span><span class="token punctuation">.</span>isNeedRewrite<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>headers<span class="token operator">=</span>t<span class="token punctuation">.</span>headers<span class="token operator">||</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>headers<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string-property property">&quot;X-Surge-Skip-Scripting&quot;</span><span class="token operator">:</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>$httpClient<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>s<span class="token punctuation">,</span>i</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token operator">!</span>t<span class="token operator">&amp;&amp;</span>s<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>body<span class="token operator">=</span>i<span class="token punctuation">,</span>s<span class="token punctuation">.</span>statusCode<span class="token operator">=</span>s<span class="token punctuation">.</span>status<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">e</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>s<span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isQuanX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>isNeedRewrite<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>opts<span class="token operator">=</span>t<span class="token punctuation">.</span>opts<span class="token operator">||</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>opts<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">hints</span><span class="token operator">:</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>$task<span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token keyword">const</span><span class="token punctuation">{</span><span class="token literal-property property">statusCode</span><span class="token operator">:</span>s<span class="token punctuation">,</span><span class="token literal-property property">statusCode</span><span class="token operator">:</span>i<span class="token punctuation">,</span><span class="token literal-property property">headers</span><span class="token operator">:</span>r<span class="token punctuation">,</span><span class="token literal-property property">body</span><span class="token operator">:</span>o<span class="token punctuation">}</span><span class="token operator">=</span>t<span class="token punctuation">;</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">status</span><span class="token operator">:</span>s<span class="token punctuation">,</span><span class="token literal-property property">statusCode</span><span class="token operator">:</span>i<span class="token punctuation">,</span><span class="token literal-property property">headers</span><span class="token operator">:</span>r<span class="token punctuation">,</span><span class="token literal-property property">body</span><span class="token operator">:</span>o<span class="token punctuation">}</span><span class="token punctuation">,</span>o<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token parameter">t</span><span class="token operator">=&gt;</span><span class="token function">e</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">initGotEnv</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">got</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;redirect&quot;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token keyword">try</span><span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&quot;set-cookie&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">const</span> s<span class="token operator">=</span>t<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&quot;set-cookie&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>cktough<span class="token punctuation">.</span>Cookie<span class="token punctuation">.</span>parse<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>ckjar<span class="token punctuation">.</span><span class="token function">setCookieSync</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token punctuation">.</span>cookieJar<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>ckjar<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">logErr</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token keyword">const</span><span class="token punctuation">{</span><span class="token literal-property property">statusCode</span><span class="token operator">:</span>s<span class="token punctuation">,</span><span class="token literal-property property">statusCode</span><span class="token operator">:</span>i<span class="token punctuation">,</span><span class="token literal-property property">headers</span><span class="token operator">:</span>r<span class="token punctuation">,</span><span class="token literal-property property">body</span><span class="token operator">:</span>o<span class="token punctuation">}</span><span class="token operator">=</span>t<span class="token punctuation">;</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">status</span><span class="token operator">:</span>s<span class="token punctuation">,</span><span class="token literal-property property">statusCode</span><span class="token operator">:</span>i<span class="token punctuation">,</span><span class="token literal-property property">headers</span><span class="token operator">:</span>r<span class="token punctuation">,</span><span class="token literal-property property">body</span><span class="token operator">:</span>o<span class="token punctuation">}</span><span class="token punctuation">,</span>o<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token parameter">t</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token keyword">const</span><span class="token punctuation">{</span><span class="token literal-property property">message</span><span class="token operator">:</span>s<span class="token punctuation">,</span><span class="token literal-property property">response</span><span class="token operator">:</span>i<span class="token punctuation">}</span><span class="token operator">=</span>t<span class="token punctuation">;</span><span class="token function">e</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span>i<span class="token punctuation">,</span>i<span class="token operator">&amp;&amp;</span>i<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">post</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>e<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>body<span class="token operator">&amp;&amp;</span>t<span class="token punctuation">.</span>headers<span class="token operator">&amp;&amp;</span><span class="token operator">!</span>t<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">]</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">&quot;application/x-www-form-urlencoded&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>t<span class="token punctuation">.</span>headers<span class="token operator">&amp;&amp;</span><span class="token keyword">delete</span> t<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&quot;Content-Length&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isSurge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isLoon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isSurge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token keyword">this</span><span class="token punctuation">.</span>isNeedRewrite<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>headers<span class="token operator">=</span>t<span class="token punctuation">.</span>headers<span class="token operator">||</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>headers<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string-property property">&quot;X-Surge-Skip-Scripting&quot;</span><span class="token operator">:</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>$httpClient<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>s<span class="token punctuation">,</span>i</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token operator">!</span>t<span class="token operator">&amp;&amp;</span>s<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>body<span class="token operator">=</span>i<span class="token punctuation">,</span>s<span class="token punctuation">.</span>statusCode<span class="token operator">=</span>s<span class="token punctuation">.</span>status<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">e</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>s<span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isQuanX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>method<span class="token operator">=</span><span class="token string">&quot;POST&quot;</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>isNeedRewrite<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>opts<span class="token operator">=</span>t<span class="token punctuation">.</span>opts<span class="token operator">||</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>opts<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">hints</span><span class="token operator">:</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>$task<span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token keyword">const</span><span class="token punctuation">{</span><span class="token literal-property property">statusCode</span><span class="token operator">:</span>s<span class="token punctuation">,</span><span class="token literal-property property">statusCode</span><span class="token operator">:</span>i<span class="token punctuation">,</span><span class="token literal-property property">headers</span><span class="token operator">:</span>r<span class="token punctuation">,</span><span class="token literal-property property">body</span><span class="token operator">:</span>o<span class="token punctuation">}</span><span class="token operator">=</span>t<span class="token punctuation">;</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">status</span><span class="token operator">:</span>s<span class="token punctuation">,</span><span class="token literal-property property">statusCode</span><span class="token operator">:</span>i<span class="token punctuation">,</span><span class="token literal-property property">headers</span><span class="token operator">:</span>r<span class="token punctuation">,</span><span class="token literal-property property">body</span><span class="token operator">:</span>o<span class="token punctuation">}</span><span class="token punctuation">,</span>o<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token parameter">t</span><span class="token operator">=&gt;</span><span class="token function">e</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">initGotEnv</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span><span class="token punctuation">{</span><span class="token literal-property property">url</span><span class="token operator">:</span>s<span class="token punctuation">,</span><span class="token operator">...</span>i<span class="token punctuation">}</span><span class="token operator">=</span>t<span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>got<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token keyword">const</span><span class="token punctuation">{</span><span class="token literal-property property">statusCode</span><span class="token operator">:</span>s<span class="token punctuation">,</span><span class="token literal-property property">statusCode</span><span class="token operator">:</span>i<span class="token punctuation">,</span><span class="token literal-property property">headers</span><span class="token operator">:</span>r<span class="token punctuation">,</span><span class="token literal-property property">body</span><span class="token operator">:</span>o<span class="token punctuation">}</span><span class="token operator">=</span>t<span class="token punctuation">;</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">status</span><span class="token operator">:</span>s<span class="token punctuation">,</span><span class="token literal-property property">statusCode</span><span class="token operator">:</span>i<span class="token punctuation">,</span><span class="token literal-property property">headers</span><span class="token operator">:</span>r<span class="token punctuation">,</span><span class="token literal-property property">body</span><span class="token operator">:</span>o<span class="token punctuation">}</span><span class="token punctuation">,</span>o<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token parameter">t</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token keyword">const</span><span class="token punctuation">{</span><span class="token literal-property property">message</span><span class="token operator">:</span>s<span class="token punctuation">,</span><span class="token literal-property property">response</span><span class="token operator">:</span>i<span class="token punctuation">}</span><span class="token operator">=</span>t<span class="token punctuation">;</span><span class="token function">e</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span>i<span class="token punctuation">,</span>i<span class="token operator">&amp;&amp;</span>i<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">let</span> e<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string-property property">&quot;M+&quot;</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string-property property">&quot;d+&quot;</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string-property property">&quot;H+&quot;</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string-property property">&quot;m+&quot;</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string-property property">&quot;s+&quot;</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string-property property">&quot;q+&quot;</span><span class="token operator">:</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token constant">S</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMilliseconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(y+)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>t<span class="token operator">=</span>t<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>RegExp<span class="token punctuation">.</span>$1<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token operator">-</span>RegExp<span class="token punctuation">.</span>$1<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> s <span class="token keyword">in</span> e<span class="token punctuation">)</span><span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">&quot;(&quot;</span><span class="token operator">+</span>s<span class="token operator">+</span><span class="token string">&quot;)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>t<span class="token operator">=</span>t<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>RegExp<span class="token punctuation">.</span>$1<span class="token punctuation">,</span><span class="token number">1</span><span class="token operator">==</span>RegExp<span class="token punctuation">.</span>$1<span class="token punctuation">.</span>length<span class="token operator">?</span>e<span class="token punctuation">[</span>s<span class="token punctuation">]</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token string">&quot;00&quot;</span><span class="token operator">+</span>e<span class="token punctuation">[</span>s<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token operator">+</span>e<span class="token punctuation">[</span>s<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> t<span class="token punctuation">}</span><span class="token function">msg</span><span class="token punctuation">(</span>e<span class="token operator">=</span>t<span class="token punctuation">,</span>s<span class="token operator">=</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>i<span class="token operator">=</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>r<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">const</span> <span class="token function-variable function">o</span><span class="token operator">=</span><span class="token parameter">t</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>t<span class="token punctuation">)</span><span class="token keyword">return</span> t<span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">&quot;string&quot;</span><span class="token operator">==</span><span class="token keyword">typeof</span> t<span class="token punctuation">)</span><span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isLoon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span>t<span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isQuanX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">{</span><span class="token string-property property">&quot;open-url&quot;</span><span class="token operator">:</span>t<span class="token punctuation">}</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isSurge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">{</span><span class="token literal-property property">url</span><span class="token operator">:</span>t<span class="token punctuation">}</span><span class="token operator">:</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">&quot;object&quot;</span><span class="token operator">==</span><span class="token keyword">typeof</span> t<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isLoon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">let</span> e<span class="token operator">=</span>t<span class="token punctuation">.</span>openUrl<span class="token operator">||</span>t<span class="token punctuation">.</span>url<span class="token operator">||</span>t<span class="token punctuation">[</span><span class="token string">&quot;open-url&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>s<span class="token operator">=</span>t<span class="token punctuation">.</span>mediaUrl<span class="token operator">||</span>t<span class="token punctuation">[</span><span class="token string">&quot;media-url&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">return</span><span class="token punctuation">{</span><span class="token literal-property property">openUrl</span><span class="token operator">:</span>e<span class="token punctuation">,</span><span class="token literal-property property">mediaUrl</span><span class="token operator">:</span>s<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isQuanX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">let</span> e<span class="token operator">=</span>t<span class="token punctuation">[</span><span class="token string">&quot;open-url&quot;</span><span class="token punctuation">]</span><span class="token operator">||</span>t<span class="token punctuation">.</span>url<span class="token operator">||</span>t<span class="token punctuation">.</span>openUrl<span class="token punctuation">,</span>s<span class="token operator">=</span>t<span class="token punctuation">[</span><span class="token string">&quot;media-url&quot;</span><span class="token punctuation">]</span><span class="token operator">||</span>t<span class="token punctuation">.</span>mediaUrl<span class="token punctuation">;</span><span class="token keyword">return</span><span class="token punctuation">{</span><span class="token string-property property">&quot;open-url&quot;</span><span class="token operator">:</span>e<span class="token punctuation">,</span><span class="token string-property property">&quot;media-url&quot;</span><span class="token operator">:</span>s<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isSurge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">let</span> e<span class="token operator">=</span>t<span class="token punctuation">.</span>url<span class="token operator">||</span>t<span class="token punctuation">.</span>openUrl<span class="token operator">||</span>t<span class="token punctuation">[</span><span class="token string">&quot;open-url&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">return</span><span class="token punctuation">{</span><span class="token literal-property property">url</span><span class="token operator">:</span>e<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>isMute<span class="token operator">||</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isSurge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isLoon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span>$notification<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span>s<span class="token punctuation">,</span>i<span class="token punctuation">,</span><span class="token function">o</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isQuanX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token function">$notify</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span>s<span class="token punctuation">,</span>i<span class="token punctuation">,</span><span class="token function">o</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> h<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;==============\\ud83d\\udce3\\u7cfb\\u7edf\\u901a\\u77e5\\ud83d\\udce3==============&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>h<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">,</span>s<span class="token operator">&amp;&amp;</span>h<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">,</span>i<span class="token operator">&amp;&amp;</span>h<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>h<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>logs<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>logs<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>h<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>t</span><span class="token punctuation">)</span><span class="token punctuation">{</span>t<span class="token punctuation">.</span>length<span class="token operator">&gt;</span><span class="token number">0</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>logs<span class="token operator">=</span><span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>logs<span class="token punctuation">,</span><span class="token operator">...</span>t<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>logSeparator<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">logErr</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">const</span> s<span class="token operator">=</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isSurge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isQuanX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isLoon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>s<span class="token operator">?</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\\u2757\\ufe0f</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, \\u9519\\u8bef!</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>t<span class="token punctuation">.</span>stack<span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\\u2757\\ufe0f</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, \\u9519\\u8bef!</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token operator">=&gt;</span><span class="token function">setTimeout</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">done</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">const</span> e<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>s<span class="token operator">=</span><span class="token punctuation">(</span>e<span class="token operator">-</span><span class="token keyword">this</span><span class="token punctuation">.</span>startTime<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">1e3</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\\ud83d\\udd14</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, \\u7ed3\\u675f! \\ud83d\\udd5b </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>s<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> \\u79d2</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isSurge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isQuanX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isLoon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token function">$done</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><ul><li>完整版本</li></ul><p><code>$.msg($.name, message);</code> 表示调用系统通知（脚本名，消息）</p><p>message += <code>这是第1个数据\\n</code></p><p><code>+=</code> 表示消息累加 <code>\\n</code> 表示换行</p><details class="hint-container details"><summary>点击查看 完整版本代码</summary><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">/*</span>
<span class="line">这里是注释</span>
<span class="line"></span>
<span class="line">这里是cron表达式</span>
<span class="line">cron 0 8 * * * jbm.js</span>
<span class="line">*/</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//这里设定脚本名</span></span>
<span class="line"><span class="token keyword">const</span> $ <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Env</span><span class="token punctuation">(</span><span class="token string">&quot;这里填脚本名或其他&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//这里是调取青龙通知</span></span>
<span class="line"><span class="token keyword">const</span> notify <span class="token operator">=</span> $<span class="token punctuation">.</span><span class="token function">isNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./sendNotify&#39;</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> notifyFlag <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">//0为关闭通知，1为打开通知,默认为1</span></span>
<span class="line"><span class="token keyword">let</span> message <span class="token operator">=</span> <span class="token string">&#39;&#39;</span> <span class="token comment">//块作用域定义message变量</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token comment">//async 异步函数 常与await和function一起用</span></span>
<span class="line"><span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  </span>
<span class="line">  </span>
<span class="line">	<span class="token keyword">await</span> <span class="token function">check</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//等待表达式 check只是演示 可以自己根据需求更改</span></span>
<span class="line">  </span>
<span class="line">  </span>
<span class="line">  <span class="token comment">//通知体</span></span>
<span class="line">	<span class="token keyword">if</span> <span class="token punctuation">(</span>notifyFlag <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		$<span class="token punctuation">.</span><span class="token function">msg</span><span class="token punctuation">(</span>$<span class="token punctuation">.</span>name<span class="token punctuation">,</span> message<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token keyword">if</span> <span class="token punctuation">(</span>$<span class="token punctuation">.</span><span class="token function">isNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">			<span class="token keyword">await</span> notify<span class="token punctuation">.</span><span class="token function">sendNotify</span><span class="token punctuation">(</span>$<span class="token punctuation">.</span>name<span class="token punctuation">,</span> message<span class="token punctuation">)</span></span>
<span class="line">		<span class="token punctuation">}</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token comment">//以下3个是async函数的完整体 不要改</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> $<span class="token punctuation">.</span><span class="token function">logErr</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> $<span class="token punctuation">.</span><span class="token function">done</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token comment">//function函数 找到你想要的数据</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">check</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  </span>
<span class="line">  message <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">这是第1个数据\\n</span><span class="token template-punctuation string">\`</span></span></span>
<span class="line">  message <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">这是第2个数据\\n</span><span class="token template-punctuation string">\`</span></span></span>
<span class="line">    </span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token comment">//固定模板 不要动</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">Env</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token string">&quot;undefined&quot;</span><span class="token operator">!=</span><span class="token keyword">typeof</span> process<span class="token operator">&amp;&amp;</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;GITHUB&quot;</span><span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token operator">-</span><span class="token number">1</span><span class="token operator">&amp;&amp;</span>process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">s</span><span class="token punctuation">{</span><span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>env<span class="token operator">=</span>t<span class="token punctuation">}</span><span class="token function">send</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>e<span class="token operator">=</span><span class="token string">&quot;GET&quot;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>t<span class="token operator">=</span><span class="token string">&quot;string&quot;</span><span class="token operator">==</span><span class="token keyword">typeof</span> t<span class="token operator">?</span><span class="token punctuation">{</span><span class="token literal-property property">url</span><span class="token operator">:</span>t<span class="token punctuation">}</span><span class="token operator">:</span>t<span class="token punctuation">;</span><span class="token keyword">let</span> s<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>get<span class="token punctuation">;</span><span class="token keyword">return</span><span class="token string">&quot;POST&quot;</span><span class="token operator">===</span>e<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>s<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>post<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">e<span class="token punctuation">,</span>i</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token function">s</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span>t<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>s<span class="token punctuation">,</span>r</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>t<span class="token operator">?</span><span class="token function">i</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token operator">:</span><span class="token function">e</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">get</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>env<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>env<span class="token punctuation">,</span>t<span class="token punctuation">,</span><span class="token string">&quot;POST&quot;</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">class</span><span class="token punctuation">{</span><span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token operator">=</span>t<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>http<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">s</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>dataFile<span class="token operator">=</span><span class="token string">&quot;box.dat&quot;</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>logs<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>isMute<span class="token operator">=</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>isNeedRewrite<span class="token operator">=</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>logSeparator<span class="token operator">=</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>startTime<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\\ud83d\\udd14</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, \\u5f00\\u59cb!</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">isNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span><span class="token string">&quot;undefined&quot;</span><span class="token operator">!=</span><span class="token keyword">typeof</span> module<span class="token operator">&amp;&amp;</span><span class="token operator">!</span><span class="token operator">!</span>module<span class="token punctuation">.</span>exports<span class="token punctuation">}</span><span class="token function">isQuanX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span><span class="token string">&quot;undefined&quot;</span><span class="token operator">!=</span><span class="token keyword">typeof</span> $task<span class="token punctuation">}</span><span class="token function">isSurge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span><span class="token string">&quot;undefined&quot;</span><span class="token operator">!=</span><span class="token keyword">typeof</span> $httpClient<span class="token operator">&amp;&amp;</span><span class="token string">&quot;undefined&quot;</span><span class="token operator">==</span><span class="token keyword">typeof</span> $loon<span class="token punctuation">}</span><span class="token function">isLoon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span><span class="token string">&quot;undefined&quot;</span><span class="token operator">!=</span><span class="token keyword">typeof</span> $loon<span class="token punctuation">}</span><span class="token function">toObj</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e<span class="token operator">=</span><span class="token keyword">null</span></span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">try</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">{</span><span class="token keyword">return</span> e<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token function">toStr</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e<span class="token operator">=</span><span class="token keyword">null</span></span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">try</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">{</span><span class="token keyword">return</span> e<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token function">getjson</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">let</span> s<span class="token operator">=</span>e<span class="token punctuation">;</span><span class="token keyword">const</span> i<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getdata</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token keyword">try</span><span class="token punctuation">{</span>s<span class="token operator">=</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getdata</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token keyword">return</span> s<span class="token punctuation">}</span><span class="token function">setjson</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">try</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setdata</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">{</span><span class="token keyword">return</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token function">getScript</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">url</span><span class="token operator">:</span>t<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>s<span class="token punctuation">,</span>i</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token function">e</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">runScript</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">s</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getdata</span><span class="token punctuation">(</span><span class="token string">&quot;@chavy_boxjs_userCfgs.httpapi&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">=</span>i<span class="token operator">?</span>i<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\n</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span>i<span class="token punctuation">;</span><span class="token keyword">let</span> r<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getdata</span><span class="token punctuation">(</span><span class="token string">&quot;@chavy_boxjs_userCfgs.httpapi_timeout&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>r<span class="token operator">=</span>r<span class="token operator">?</span><span class="token number">1</span><span class="token operator">*</span>r<span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">,</span>r<span class="token operator">=</span>e<span class="token operator">&amp;&amp;</span>e<span class="token punctuation">.</span>timeout<span class="token operator">?</span>e<span class="token punctuation">.</span>timeout<span class="token operator">:</span>r<span class="token punctuation">;</span><span class="token keyword">const</span><span class="token punctuation">[</span>o<span class="token punctuation">,</span>h<span class="token punctuation">]</span><span class="token operator">=</span>i<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;@&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token punctuation">{</span><span class="token literal-property property">url</span><span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">http://</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>h<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/v1/scripting/evaluate</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span><span class="token literal-property property">body</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">script_text</span><span class="token operator">:</span>t<span class="token punctuation">,</span><span class="token literal-property property">mock_type</span><span class="token operator">:</span><span class="token string">&quot;cron&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">timeout</span><span class="token operator">:</span>r<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token literal-property property">headers</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token string-property property">&quot;X-Key&quot;</span><span class="token operator">:</span>o<span class="token punctuation">,</span><span class="token literal-property property">Accept</span><span class="token operator">:</span><span class="token string">&quot;*/*&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e<span class="token punctuation">,</span>i</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token function">s</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token operator">=&gt;</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">logErr</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">loaddata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">return</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>fs<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>fs<span class="token operator">?</span><span class="token keyword">this</span><span class="token punctuation">.</span>fs<span class="token operator">:</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;fs&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>path<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>path<span class="token operator">?</span><span class="token keyword">this</span><span class="token punctuation">.</span>path<span class="token operator">:</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;path&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> t<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>dataFile<span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>dataFile<span class="token punctuation">)</span><span class="token punctuation">,</span>s<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span>i<span class="token operator">=</span><span class="token operator">!</span>s<span class="token operator">&amp;&amp;</span><span class="token keyword">this</span><span class="token punctuation">.</span>fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>s<span class="token operator">&amp;&amp;</span><span class="token operator">!</span>i<span class="token punctuation">)</span><span class="token keyword">return</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">{</span><span class="token keyword">const</span> i<span class="token operator">=</span>s<span class="token operator">?</span>t<span class="token operator">:</span>e<span class="token punctuation">;</span><span class="token keyword">try</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token function">writedata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>fs<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>fs<span class="token operator">?</span><span class="token keyword">this</span><span class="token punctuation">.</span>fs<span class="token operator">:</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;fs&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>path<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>path<span class="token operator">?</span><span class="token keyword">this</span><span class="token punctuation">.</span>path<span class="token operator">:</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;path&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> t<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>dataFile<span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>dataFile<span class="token punctuation">)</span><span class="token punctuation">,</span>s<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span>i<span class="token operator">=</span><span class="token operator">!</span>s<span class="token operator">&amp;&amp;</span><span class="token keyword">this</span><span class="token punctuation">.</span>fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">,</span>r<span class="token operator">=</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>s<span class="token operator">?</span><span class="token keyword">this</span><span class="token punctuation">.</span>fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>r<span class="token punctuation">)</span><span class="token operator">:</span>i<span class="token operator">?</span><span class="token keyword">this</span><span class="token punctuation">.</span>fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span>r<span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>r<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token function">lodash_get</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e<span class="token punctuation">,</span>s</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">const</span> i<span class="token operator">=</span>e<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\[(\\d+)\\]</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span><span class="token string">&quot;.$1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> r<span class="token operator">=</span>t<span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> t <span class="token keyword">of</span> i<span class="token punctuation">)</span><span class="token keyword">if</span><span class="token punctuation">(</span>r<span class="token operator">=</span><span class="token function">Object</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">===</span>r<span class="token punctuation">)</span><span class="token keyword">return</span> s<span class="token punctuation">;</span><span class="token keyword">return</span> r<span class="token punctuation">}</span><span class="token function">lodash_set</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e<span class="token punctuation">,</span>s</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token function">Object</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token operator">!==</span>t<span class="token operator">?</span>t<span class="token operator">:</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token operator">||</span><span class="token punctuation">(</span>e<span class="token operator">=</span>e<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[^.[\\]]+</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>s<span class="token punctuation">,</span>i</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token function">Object</span><span class="token punctuation">(</span>t<span class="token punctuation">[</span>s<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">===</span>t<span class="token punctuation">[</span>s<span class="token punctuation">]</span><span class="token operator">?</span>t<span class="token punctuation">[</span>s<span class="token punctuation">]</span><span class="token operator">:</span>t<span class="token punctuation">[</span>s<span class="token punctuation">]</span><span class="token operator">=</span>Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>e<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">&gt;&gt;</span><span class="token number">0</span><span class="token operator">==</span><span class="token operator">+</span>e<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">?</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">[</span>e<span class="token punctuation">[</span>e<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">=</span>s<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">getdata</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">let</span> e<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getval</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^@</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">const</span><span class="token punctuation">[</span><span class="token punctuation">,</span>s<span class="token punctuation">,</span>i<span class="token punctuation">]</span><span class="token operator">=</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^@(.*?)\\.(.*?)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span>r<span class="token operator">=</span>s<span class="token operator">?</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getval</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token operator">:</span><span class="token string">&quot;&quot;</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token keyword">try</span><span class="token punctuation">{</span><span class="token keyword">const</span> t<span class="token operator">=</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">;</span>e<span class="token operator">=</span>t<span class="token operator">?</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">lodash_get</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>i<span class="token punctuation">,</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>e<span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">{</span>e<span class="token operator">=</span><span class="token string">&quot;&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">return</span> e<span class="token punctuation">}</span><span class="token function">setdata</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">let</span> s<span class="token operator">=</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^@</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">const</span><span class="token punctuation">[</span><span class="token punctuation">,</span>i<span class="token punctuation">,</span>r<span class="token punctuation">]</span><span class="token operator">=</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^@(.*?)\\.(.*?)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">,</span>o<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getval</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span>h<span class="token operator">=</span>i<span class="token operator">?</span><span class="token string">&quot;null&quot;</span><span class="token operator">===</span>o<span class="token operator">?</span><span class="token keyword">null</span><span class="token operator">:</span>o<span class="token operator">||</span><span class="token string">&quot;{}&quot;</span><span class="token operator">:</span><span class="token string">&quot;{}&quot;</span><span class="token punctuation">;</span><span class="token keyword">try</span><span class="token punctuation">{</span><span class="token keyword">const</span> e<span class="token operator">=</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>h<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">lodash_set</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span>r<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span>s<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setval</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">const</span> o<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">lodash_set</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span>r<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span>s<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setval</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">else</span> s<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setval</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> s<span class="token punctuation">}</span><span class="token function">getval</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isSurge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isLoon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span>$persistentStore<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isQuanX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span>$prefs<span class="token punctuation">.</span><span class="token function">valueForKey</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">loaddata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token operator">&amp;&amp;</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token operator">||</span><span class="token keyword">null</span><span class="token punctuation">}</span><span class="token function">setval</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isSurge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isLoon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span>$persistentStore<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isQuanX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span>$prefs<span class="token punctuation">.</span><span class="token function">setValueForKey</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">loaddata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">[</span>e<span class="token punctuation">]</span><span class="token operator">=</span>t<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">writedata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token operator">&amp;&amp;</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">[</span>e<span class="token punctuation">]</span><span class="token operator">||</span><span class="token keyword">null</span><span class="token punctuation">}</span><span class="token function">initGotEnv</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>got<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>got<span class="token operator">?</span><span class="token keyword">this</span><span class="token punctuation">.</span>got<span class="token operator">:</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;got&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>cktough<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>cktough<span class="token operator">?</span><span class="token keyword">this</span><span class="token punctuation">.</span>cktough<span class="token operator">:</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;tough-cookie&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>ckjar<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>ckjar<span class="token operator">?</span><span class="token keyword">this</span><span class="token punctuation">.</span>ckjar<span class="token operator">:</span><span class="token keyword">new</span> <span class="token class-name">this<span class="token punctuation">.</span>cktough<span class="token punctuation">.</span>CookieJar</span><span class="token punctuation">,</span>t<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>headers<span class="token operator">=</span>t<span class="token punctuation">.</span>headers<span class="token operator">?</span>t<span class="token punctuation">.</span>headers<span class="token operator">:</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">===</span>t<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>Cookie<span class="token operator">&amp;&amp;</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">===</span>t<span class="token punctuation">.</span>cookieJar<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>cookieJar<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>ckjar<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">get</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>e<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>t<span class="token punctuation">.</span>headers<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span><span class="token keyword">delete</span> t<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token keyword">delete</span> t<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&quot;Content-Length&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isSurge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isLoon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isSurge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token keyword">this</span><span class="token punctuation">.</span>isNeedRewrite<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>headers<span class="token operator">=</span>t<span class="token punctuation">.</span>headers<span class="token operator">||</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>headers<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string-property property">&quot;X-Surge-Skip-Scripting&quot;</span><span class="token operator">:</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>$httpClient<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>s<span class="token punctuation">,</span>i</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token operator">!</span>t<span class="token operator">&amp;&amp;</span>s<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>body<span class="token operator">=</span>i<span class="token punctuation">,</span>s<span class="token punctuation">.</span>statusCode<span class="token operator">=</span>s<span class="token punctuation">.</span>status<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">e</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>s<span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isQuanX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>isNeedRewrite<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>opts<span class="token operator">=</span>t<span class="token punctuation">.</span>opts<span class="token operator">||</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>opts<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">hints</span><span class="token operator">:</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>$task<span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token keyword">const</span><span class="token punctuation">{</span><span class="token literal-property property">statusCode</span><span class="token operator">:</span>s<span class="token punctuation">,</span><span class="token literal-property property">statusCode</span><span class="token operator">:</span>i<span class="token punctuation">,</span><span class="token literal-property property">headers</span><span class="token operator">:</span>r<span class="token punctuation">,</span><span class="token literal-property property">body</span><span class="token operator">:</span>o<span class="token punctuation">}</span><span class="token operator">=</span>t<span class="token punctuation">;</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">status</span><span class="token operator">:</span>s<span class="token punctuation">,</span><span class="token literal-property property">statusCode</span><span class="token operator">:</span>i<span class="token punctuation">,</span><span class="token literal-property property">headers</span><span class="token operator">:</span>r<span class="token punctuation">,</span><span class="token literal-property property">body</span><span class="token operator">:</span>o<span class="token punctuation">}</span><span class="token punctuation">,</span>o<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token parameter">t</span><span class="token operator">=&gt;</span><span class="token function">e</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">initGotEnv</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">got</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;redirect&quot;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token keyword">try</span><span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&quot;set-cookie&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">const</span> s<span class="token operator">=</span>t<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&quot;set-cookie&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>cktough<span class="token punctuation">.</span>Cookie<span class="token punctuation">.</span>parse<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>ckjar<span class="token punctuation">.</span><span class="token function">setCookieSync</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token punctuation">.</span>cookieJar<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>ckjar<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">logErr</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token keyword">const</span><span class="token punctuation">{</span><span class="token literal-property property">statusCode</span><span class="token operator">:</span>s<span class="token punctuation">,</span><span class="token literal-property property">statusCode</span><span class="token operator">:</span>i<span class="token punctuation">,</span><span class="token literal-property property">headers</span><span class="token operator">:</span>r<span class="token punctuation">,</span><span class="token literal-property property">body</span><span class="token operator">:</span>o<span class="token punctuation">}</span><span class="token operator">=</span>t<span class="token punctuation">;</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">status</span><span class="token operator">:</span>s<span class="token punctuation">,</span><span class="token literal-property property">statusCode</span><span class="token operator">:</span>i<span class="token punctuation">,</span><span class="token literal-property property">headers</span><span class="token operator">:</span>r<span class="token punctuation">,</span><span class="token literal-property property">body</span><span class="token operator">:</span>o<span class="token punctuation">}</span><span class="token punctuation">,</span>o<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token parameter">t</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token keyword">const</span><span class="token punctuation">{</span><span class="token literal-property property">message</span><span class="token operator">:</span>s<span class="token punctuation">,</span><span class="token literal-property property">response</span><span class="token operator">:</span>i<span class="token punctuation">}</span><span class="token operator">=</span>t<span class="token punctuation">;</span><span class="token function">e</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span>i<span class="token punctuation">,</span>i<span class="token operator">&amp;&amp;</span>i<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">post</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>e<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>body<span class="token operator">&amp;&amp;</span>t<span class="token punctuation">.</span>headers<span class="token operator">&amp;&amp;</span><span class="token operator">!</span>t<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">]</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">&quot;application/x-www-form-urlencoded&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>t<span class="token punctuation">.</span>headers<span class="token operator">&amp;&amp;</span><span class="token keyword">delete</span> t<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&quot;Content-Length&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isSurge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isLoon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isSurge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token keyword">this</span><span class="token punctuation">.</span>isNeedRewrite<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>headers<span class="token operator">=</span>t<span class="token punctuation">.</span>headers<span class="token operator">||</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>headers<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string-property property">&quot;X-Surge-Skip-Scripting&quot;</span><span class="token operator">:</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>$httpClient<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>s<span class="token punctuation">,</span>i</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token operator">!</span>t<span class="token operator">&amp;&amp;</span>s<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>body<span class="token operator">=</span>i<span class="token punctuation">,</span>s<span class="token punctuation">.</span>statusCode<span class="token operator">=</span>s<span class="token punctuation">.</span>status<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">e</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>s<span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isQuanX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>method<span class="token operator">=</span><span class="token string">&quot;POST&quot;</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>isNeedRewrite<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>opts<span class="token operator">=</span>t<span class="token punctuation">.</span>opts<span class="token operator">||</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>opts<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">hints</span><span class="token operator">:</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>$task<span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token keyword">const</span><span class="token punctuation">{</span><span class="token literal-property property">statusCode</span><span class="token operator">:</span>s<span class="token punctuation">,</span><span class="token literal-property property">statusCode</span><span class="token operator">:</span>i<span class="token punctuation">,</span><span class="token literal-property property">headers</span><span class="token operator">:</span>r<span class="token punctuation">,</span><span class="token literal-property property">body</span><span class="token operator">:</span>o<span class="token punctuation">}</span><span class="token operator">=</span>t<span class="token punctuation">;</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">status</span><span class="token operator">:</span>s<span class="token punctuation">,</span><span class="token literal-property property">statusCode</span><span class="token operator">:</span>i<span class="token punctuation">,</span><span class="token literal-property property">headers</span><span class="token operator">:</span>r<span class="token punctuation">,</span><span class="token literal-property property">body</span><span class="token operator">:</span>o<span class="token punctuation">}</span><span class="token punctuation">,</span>o<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token parameter">t</span><span class="token operator">=&gt;</span><span class="token function">e</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">initGotEnv</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span><span class="token punctuation">{</span><span class="token literal-property property">url</span><span class="token operator">:</span>s<span class="token punctuation">,</span><span class="token operator">...</span>i<span class="token punctuation">}</span><span class="token operator">=</span>t<span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>got<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token keyword">const</span><span class="token punctuation">{</span><span class="token literal-property property">statusCode</span><span class="token operator">:</span>s<span class="token punctuation">,</span><span class="token literal-property property">statusCode</span><span class="token operator">:</span>i<span class="token punctuation">,</span><span class="token literal-property property">headers</span><span class="token operator">:</span>r<span class="token punctuation">,</span><span class="token literal-property property">body</span><span class="token operator">:</span>o<span class="token punctuation">}</span><span class="token operator">=</span>t<span class="token punctuation">;</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">status</span><span class="token operator">:</span>s<span class="token punctuation">,</span><span class="token literal-property property">statusCode</span><span class="token operator">:</span>i<span class="token punctuation">,</span><span class="token literal-property property">headers</span><span class="token operator">:</span>r<span class="token punctuation">,</span><span class="token literal-property property">body</span><span class="token operator">:</span>o<span class="token punctuation">}</span><span class="token punctuation">,</span>o<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token parameter">t</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token keyword">const</span><span class="token punctuation">{</span><span class="token literal-property property">message</span><span class="token operator">:</span>s<span class="token punctuation">,</span><span class="token literal-property property">response</span><span class="token operator">:</span>i<span class="token punctuation">}</span><span class="token operator">=</span>t<span class="token punctuation">;</span><span class="token function">e</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span>i<span class="token punctuation">,</span>i<span class="token operator">&amp;&amp;</span>i<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">let</span> e<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string-property property">&quot;M+&quot;</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string-property property">&quot;d+&quot;</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string-property property">&quot;H+&quot;</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string-property property">&quot;m+&quot;</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string-property property">&quot;s+&quot;</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string-property property">&quot;q+&quot;</span><span class="token operator">:</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token constant">S</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMilliseconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(y+)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>t<span class="token operator">=</span>t<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>RegExp<span class="token punctuation">.</span>$1<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token operator">-</span>RegExp<span class="token punctuation">.</span>$1<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> s <span class="token keyword">in</span> e<span class="token punctuation">)</span><span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">&quot;(&quot;</span><span class="token operator">+</span>s<span class="token operator">+</span><span class="token string">&quot;)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>t<span class="token operator">=</span>t<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>RegExp<span class="token punctuation">.</span>$1<span class="token punctuation">,</span><span class="token number">1</span><span class="token operator">==</span>RegExp<span class="token punctuation">.</span>$1<span class="token punctuation">.</span>length<span class="token operator">?</span>e<span class="token punctuation">[</span>s<span class="token punctuation">]</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token string">&quot;00&quot;</span><span class="token operator">+</span>e<span class="token punctuation">[</span>s<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token operator">+</span>e<span class="token punctuation">[</span>s<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> t<span class="token punctuation">}</span><span class="token function">msg</span><span class="token punctuation">(</span>e<span class="token operator">=</span>t<span class="token punctuation">,</span>s<span class="token operator">=</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>i<span class="token operator">=</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>r<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">const</span> <span class="token function-variable function">o</span><span class="token operator">=</span><span class="token parameter">t</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>t<span class="token punctuation">)</span><span class="token keyword">return</span> t<span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">&quot;string&quot;</span><span class="token operator">==</span><span class="token keyword">typeof</span> t<span class="token punctuation">)</span><span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isLoon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span>t<span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isQuanX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">{</span><span class="token string-property property">&quot;open-url&quot;</span><span class="token operator">:</span>t<span class="token punctuation">}</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isSurge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">{</span><span class="token literal-property property">url</span><span class="token operator">:</span>t<span class="token punctuation">}</span><span class="token operator">:</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">&quot;object&quot;</span><span class="token operator">==</span><span class="token keyword">typeof</span> t<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isLoon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">let</span> e<span class="token operator">=</span>t<span class="token punctuation">.</span>openUrl<span class="token operator">||</span>t<span class="token punctuation">.</span>url<span class="token operator">||</span>t<span class="token punctuation">[</span><span class="token string">&quot;open-url&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>s<span class="token operator">=</span>t<span class="token punctuation">.</span>mediaUrl<span class="token operator">||</span>t<span class="token punctuation">[</span><span class="token string">&quot;media-url&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">return</span><span class="token punctuation">{</span><span class="token literal-property property">openUrl</span><span class="token operator">:</span>e<span class="token punctuation">,</span><span class="token literal-property property">mediaUrl</span><span class="token operator">:</span>s<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isQuanX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">let</span> e<span class="token operator">=</span>t<span class="token punctuation">[</span><span class="token string">&quot;open-url&quot;</span><span class="token punctuation">]</span><span class="token operator">||</span>t<span class="token punctuation">.</span>url<span class="token operator">||</span>t<span class="token punctuation">.</span>openUrl<span class="token punctuation">,</span>s<span class="token operator">=</span>t<span class="token punctuation">[</span><span class="token string">&quot;media-url&quot;</span><span class="token punctuation">]</span><span class="token operator">||</span>t<span class="token punctuation">.</span>mediaUrl<span class="token punctuation">;</span><span class="token keyword">return</span><span class="token punctuation">{</span><span class="token string-property property">&quot;open-url&quot;</span><span class="token operator">:</span>e<span class="token punctuation">,</span><span class="token string-property property">&quot;media-url&quot;</span><span class="token operator">:</span>s<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isSurge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">let</span> e<span class="token operator">=</span>t<span class="token punctuation">.</span>url<span class="token operator">||</span>t<span class="token punctuation">.</span>openUrl<span class="token operator">||</span>t<span class="token punctuation">[</span><span class="token string">&quot;open-url&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">return</span><span class="token punctuation">{</span><span class="token literal-property property">url</span><span class="token operator">:</span>e<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>isMute<span class="token operator">||</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isSurge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isLoon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span>$notification<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span>s<span class="token punctuation">,</span>i<span class="token punctuation">,</span><span class="token function">o</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isQuanX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token function">$notify</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span>s<span class="token punctuation">,</span>i<span class="token punctuation">,</span><span class="token function">o</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> h<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;==============\\ud83d\\udce3\\u7cfb\\u7edf\\u901a\\u77e5\\ud83d\\udce3==============&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>h<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">,</span>s<span class="token operator">&amp;&amp;</span>h<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">,</span>i<span class="token operator">&amp;&amp;</span>h<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>h<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>logs<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>logs<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>h<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>t</span><span class="token punctuation">)</span><span class="token punctuation">{</span>t<span class="token punctuation">.</span>length<span class="token operator">&gt;</span><span class="token number">0</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>logs<span class="token operator">=</span><span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>logs<span class="token punctuation">,</span><span class="token operator">...</span>t<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>logSeparator<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">logErr</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">const</span> s<span class="token operator">=</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isSurge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isQuanX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isLoon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>s<span class="token operator">?</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\\u2757\\ufe0f</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, \\u9519\\u8bef!</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>t<span class="token punctuation">.</span>stack<span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\\u2757\\ufe0f</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, \\u9519\\u8bef!</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token operator">=&gt;</span><span class="token function">setTimeout</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">done</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">const</span> e<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>s<span class="token operator">=</span><span class="token punctuation">(</span>e<span class="token operator">-</span><span class="token keyword">this</span><span class="token punctuation">.</span>startTime<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">1e3</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\\ud83d\\udd14</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, \\u7ed3\\u675f! \\ud83d\\udd5b </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>s<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> \\u79d2</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isSurge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isQuanX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isLoon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token function">$done</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details></details><h2 id="常见问题" tabindex="-1"><a class="header-anchor" href="#常见问题"><span>常见问题</span></a></h2><p>1.拉不了库</p><p>要么是库的问题，要么是代理的问题，github被墙很正常</p><p>解决：手动下载 - 上传 - 然后解压到 <code>/root/ql/repo</code> 或 <code>SSH下载</code></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment">#ssh下载</span></span>
<span class="line"><span class="token builtin class-name">cd</span> /roott/ql/repo</span>
<span class="line"></span>
<span class="line"><span class="token comment">#下载并解压</span></span>
<span class="line"><span class="token function">wget</span> https://codeload.github.com/shufflewzc/faker3/zip/refs/heads/main.zip <span class="token operator">&amp;&amp;</span> <span class="token function">unzip</span> main.zip</span>
<span class="line"></span>
<span class="line"><span class="token comment">#改名</span></span>
<span class="line"><span class="token function">mv</span> main shufflewzc_faker3</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2.忘记青龙面板密码</p><p>若密码忘了，在终端用代码查看</p><div class="hint-container tip"><p class="hint-container-title">说明</p><p>password是密码</p><p>宝塔目录下 <code>root/ql/config/auth.json</code> 也可查看</p></div><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">cat</span> /root/ql/config/auth.json</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,56))])}const m=c(k,[["render",d],["__file","qinglong.html.vue"]]),h=JSON.parse('{"path":"/tutorial/website/qinglong.html","title":"青龙面板的安装及使用","lang":"zh-CN","frontmatter":{"description":"青龙面板的安装及使用 更新时间：2021-11-24 简介 一个支持 Python3、JavaScript、Shell、Typescript 的定时任务管理平台 仓库：https://github.com/whyour/qinglong 镜像：https://hub.docker.com/r/whyour/qinglong tg群：https://t....","head":[["meta",{"property":"og:url","content":"https://www.viptv.work/tutorial/website/qinglong.html"}],["meta",{"property":"og:site_name","content":"VIPTV - 工作室"}],["meta",{"property":"og:title","content":"青龙面板的安装及使用"}],["meta",{"property":"og:description","content":"青龙面板的安装及使用 更新时间：2021-11-24 简介 一个支持 Python3、JavaScript、Shell、Typescript 的定时任务管理平台 仓库：https://github.com/whyour/qinglong 镜像：https://hub.docker.com/r/whyour/qinglong tg群：https://t...."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://img.viptv.work/viptv/qinglong/qinglong-01.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-26T07:37:34.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-26T07:37:34.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"青龙面板的安装及使用\\",\\"image\\":[\\"https://img.viptv.work/viptv/qinglong/qinglong-01.png\\",\\"https://img.viptv.work/viptv/qinglong/qinglong-02.png\\",\\"https://img.viptv.work/viptv/qinglong/qinglong-03.png\\",\\"https://img.viptv.work/viptv/qinglong/qinglong-04.png\\",\\"https://img.viptv.work/viptv/qinglong/qinglong-05.png\\",\\"https://img.viptv.work/viptv/qinglong/qinglong-06.png\\",\\"https://img.viptv.work/viptv/qinglong/qinglong-07.png\\",\\"https://img.viptv.work/viptv/qinglong/qinglong-08.png\\",\\"https://img.viptv.work/viptv/qinglong/qinglong-09.png\\",\\"https://img.viptv.work/viptv/qinglong/qinglong-10.png\\",\\"https://img.viptv.work/viptv/qinglong/qinglong-11.png\\",\\"https://img.viptv.work/viptv/qinglong/qinglong-12.png\\",\\"https://img.viptv.work/viptv/qinglong/qinglong-13.png\\",\\"https://img.viptv.work/viptv/qinglong/qinglong-14.png\\",\\"https://img.viptv.work/viptv/qinglong/qinglong-15.png\\",\\"https://img.viptv.work/viptv/qinglong/qinglong-16.png\\"],\\"dateModified\\":\\"2024-11-26T07:37:34.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hefung\\",\\"url\\":\\"/about/us\\"}]}"]]},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"准备条件","slug":"准备条件","link":"#准备条件","children":[]},{"level":2,"title":"安装","slug":"安装","link":"#安装","children":[{"level":3,"title":"拉取镜像","slug":"拉取镜像","link":"#拉取镜像","children":[]},{"level":3,"title":"创建容器","slug":"创建容器","link":"#创建容器","children":[]},{"level":3,"title":"重启防火墙","slug":"重启防火墙","link":"#重启防火墙","children":[]},{"level":3,"title":"放行端口","slug":"放行端口","link":"#放行端口","children":[]}]},{"level":2,"title":"登录面板","slug":"登录面板","link":"#登录面板","children":[{"level":3,"title":"访问","slug":"访问","link":"#访问","children":[]},{"level":3,"title":"命令","slug":"命令","link":"#命令","children":[]}]},{"level":2,"title":"使用","slug":"使用","link":"#使用","children":[{"level":3,"title":"拉库","slug":"拉库","link":"#拉库","children":[]},{"level":3,"title":"安装依赖","slug":"安装依赖","link":"#安装依赖","children":[]},{"level":3,"title":"环境变量","slug":"环境变量","link":"#环境变量","children":[]}]},{"level":2,"title":"其他拓展","slug":"其他拓展","link":"#其他拓展","children":[]},{"level":2,"title":"常见问题","slug":"常见问题","link":"#常见问题","children":[]}],"git":{"createdTime":1732606654000,"updatedTime":1732606654000,"contributors":[{"name":"github-actions[bot]","email":"28900094+github-actions[bot]@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":14.45,"words":4336},"filePathRelative":"tutorial/website/qinglong.md","localizedDate":"2024年11月26日","excerpt":"","autoDesc":true}');export{m as comp,h as data};
